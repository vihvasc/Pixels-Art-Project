{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-22T19:33:52.620Z",
    "end": "2021-08-22T19:35:33.371Z",
    "duration": 100751,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ce36e48d-ce44-45a6-bf37-53677aceeef7",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "238f9bb9-4cef-4d41-aef1-ae48c2605f50",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 1031,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "b16c6047-a3ba-4a6c-9885-39b23cb9c714",
              "parentUUID": "238f9bb9-4cef-4d41-aef1-ae48c2605f50",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b16c6047-a3ba-4a6c-9885-39b23cb9c714"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1031,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6068050d-5cbd-45d9-88bb-b7f3723ae6db",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 605,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "6226939e-2ec4-4f17-84a3-ebf57b2d885f",
              "parentUUID": "6068050d-5cbd-45d9-88bb-b7f3723ae6db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 1021,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "0f480ded-8c14-4f70-bbf2-668a8562d297",
              "parentUUID": "6068050d-5cbd-45d9-88bb-b7f3723ae6db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 456,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "8370c7a7-dda1-48b0-be4c-b3bae1bc8835",
              "parentUUID": "6068050d-5cbd-45d9-88bb-b7f3723ae6db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "7bfd8bb7-a96e-4e20-aa16-ff1e6a12c385",
              "parentUUID": "6068050d-5cbd-45d9-88bb-b7f3723ae6db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 371,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "915ad49a-0ba9-4953-9e11-e77381d33b81",
              "parentUUID": "6068050d-5cbd-45d9-88bb-b7f3723ae6db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "1901eba0-f096-4363-a9a3-9b8b3cec9cba",
              "parentUUID": "6068050d-5cbd-45d9-88bb-b7f3723ae6db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "a5b8a8cb-1444-4b19-a364-81e855ba5ee7",
              "parentUUID": "6068050d-5cbd-45d9-88bb-b7f3723ae6db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6226939e-2ec4-4f17-84a3-ebf57b2d885f",
            "0f480ded-8c14-4f70-bbf2-668a8562d297",
            "8370c7a7-dda1-48b0-be4c-b3bae1bc8835",
            "7bfd8bb7-a96e-4e20-aa16-ff1e6a12c385",
            "915ad49a-0ba9-4953-9e11-e77381d33b81",
            "1901eba0-f096-4363-a9a3-9b8b3cec9cba",
            "a5b8a8cb-1444-4b19-a364-81e855ba5ee7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3560,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "76599c4d-e936-42ec-a729-b71bc7116f96",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 303,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "86c35d51-e62a-469a-acbb-ed142fc580eb",
              "parentUUID": "76599c4d-e936-42ec-a729-b71bc7116f96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "24c8da40-73c5-4fb6-b98e-e834fe125cec",
              "parentUUID": "76599c4d-e936-42ec-a729-b71bc7116f96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86c35d51-e62a-469a-acbb-ed142fc580eb",
            "24c8da40-73c5-4fb6-b98e-e834fe125cec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 860,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5aa360be-a107-4e14-9025-c12d84678dae",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "96cf379e-a80b-428b-ac5c-5c85f85621a9",
              "parentUUID": "5aa360be-a107-4e14-9025-c12d84678dae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 339,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "21b8ef6e-9aaf-49d6-b050-63ff97dcbf9e",
              "parentUUID": "5aa360be-a107-4e14-9025-c12d84678dae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "121f06f2-9b4d-435d-b11e-7671afd18fb4",
              "parentUUID": "5aa360be-a107-4e14-9025-c12d84678dae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "0af84677-67df-4458-8c1b-770d4de47eee",
              "parentUUID": "5aa360be-a107-4e14-9025-c12d84678dae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96cf379e-a80b-428b-ac5c-5c85f85621a9",
            "21b8ef6e-9aaf-49d6-b050-63ff97dcbf9e",
            "121f06f2-9b4d-435d-b11e-7671afd18fb4",
            "0af84677-67df-4458-8c1b-770d4de47eee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1604,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6e3aa944-060a-47e2-a5b0-35067aa408f0",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 792,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "ad383dfa-8dd0-4310-824e-b3cfcd397779",
              "parentUUID": "6e3aa944-060a-47e2-a5b0-35067aa408f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 663,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "fa65eb39-9261-4761-815e-a7482683c9d6",
              "parentUUID": "6e3aa944-060a-47e2-a5b0-35067aa408f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad383dfa-8dd0-4310-824e-b3cfcd397779",
            "fa65eb39-9261-4761-815e-a7482683c9d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1455,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7060b7c9-7093-4707-b98f-132dc67d8beb",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "14c26e9f-be4e-4b63-9940-e8c2ca7d1abf",
              "parentUUID": "7060b7c9-7093-4707-b98f-132dc67d8beb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 406,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "5c562fc2-c81a-4ca4-a74b-157502dc591c",
              "parentUUID": "7060b7c9-7093-4707-b98f-132dc67d8beb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "14c26e9f-be4e-4b63-9940-e8c2ca7d1abf",
            "5c562fc2-c81a-4ca4-a74b-157502dc591c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 679,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f156a342-1e7b-4b6d-85b6-203832134ce9",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 871,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "39eb2616-4cbf-46a6-a58a-55778ac89496",
              "parentUUID": "f156a342-1e7b-4b6d-85b6-203832134ce9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "3ad5dcfb-bbf9-4bdb-864f-43dc16d5e127",
              "parentUUID": "f156a342-1e7b-4b6d-85b6-203832134ce9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39eb2616-4cbf-46a6-a58a-55778ac89496",
            "3ad5dcfb-bbf9-4bdb-864f-43dc16d5e127"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11272,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d03d5edc-ee1b-42ee-bb1d-d79d400fe9f0",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "25a97b26-2bb7-482f-9a9f-dfe0a4ed9a51",
              "parentUUID": "d03d5edc-ee1b-42ee-bb1d-d79d400fe9f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 10264,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "e86d1d7d-3c1d-444e-b470-965c338ac492",
              "parentUUID": "d03d5edc-ee1b-42ee-bb1d-d79d400fe9f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "b170b5cc-14a7-4060-adc0-a6e6bc4074c9",
              "parentUUID": "d03d5edc-ee1b-42ee-bb1d-d79d400fe9f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "25a97b26-2bb7-482f-9a9f-dfe0a4ed9a51",
            "e86d1d7d-3c1d-444e-b470-965c338ac492",
            "b170b5cc-14a7-4060-adc0-a6e6bc4074c9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15627,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "174a1679-d8e6-4928-b7c1-04642163305f",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 397,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "f1008148-c6f1-40e6-b7ce-ba50e2a6f058",
              "parentUUID": "174a1679-d8e6-4928-b7c1-04642163305f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "158809e8-0d31-474a-bd66-d3d6d1230fb8",
              "parentUUID": "174a1679-d8e6-4928-b7c1-04642163305f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "19ac5e42-4c47-4438-95e3-888a5f173a9f",
              "parentUUID": "174a1679-d8e6-4928-b7c1-04642163305f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2992,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "958e8bf9-4d91-461d-a927-f51cfbd426c5",
              "parentUUID": "174a1679-d8e6-4928-b7c1-04642163305f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1008148-c6f1-40e6-b7ce-ba50e2a6f058",
            "158809e8-0d31-474a-bd66-d3d6d1230fb8",
            "19ac5e42-4c47-4438-95e3-888a5f173a9f",
            "958e8bf9-4d91-461d-a927-f51cfbd426c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3936,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c676b95e-31ad-45fc-a1f5-f0fed0258d70",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5002,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42995/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42995/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42995/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42995/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42995/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e6684e99-5af6-467e-927b-1119db73b4b4",
              "parentUUID": "c676b95e-31ad-45fc-a1f5-f0fed0258d70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4748,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42995/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42995/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42995/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42995/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42995/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "83f846c8-910b-4a15-af45-5db1c5562782",
              "parentUUID": "c676b95e-31ad-45fc-a1f5-f0fed0258d70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4678,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42995/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42995/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42995/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42995/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42995/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d6ce8441-5d6c-49b4-823b-111ff914d205",
              "parentUUID": "c676b95e-31ad-45fc-a1f5-f0fed0258d70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4703,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42995/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42995/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42995/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42995/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42995/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fc4714cf-0d10-411a-b1a2-7869acb4d843",
              "parentUUID": "c676b95e-31ad-45fc-a1f5-f0fed0258d70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4824,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42995/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42995/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42995/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42995/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42995/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9f2d1781-9f4c-4361-9750-7426a41b66e9",
              "parentUUID": "c676b95e-31ad-45fc-a1f5-f0fed0258d70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4757,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42995/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42995/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42995/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42995/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42995/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f54a7268-1a14-4cd5-b8f7-840f10a623db",
              "parentUUID": "c676b95e-31ad-45fc-a1f5-f0fed0258d70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4759,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42995/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42995/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42995/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42995/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42995/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "875bddd3-efdc-454e-8715-951df6172e10",
              "parentUUID": "c676b95e-31ad-45fc-a1f5-f0fed0258d70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4682,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42995/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42995/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42995/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42995/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42995/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8fc3838e-9f2c-4b93-a34c-c2b14555550a",
              "parentUUID": "c676b95e-31ad-45fc-a1f5-f0fed0258d70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4637,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42995/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42995/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42995/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42995/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42995/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c979508e-d3c2-4b11-a5a2-69138b593769",
              "parentUUID": "c676b95e-31ad-45fc-a1f5-f0fed0258d70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e6684e99-5af6-467e-927b-1119db73b4b4",
            "83f846c8-910b-4a15-af45-5db1c5562782",
            "d6ce8441-5d6c-49b4-823b-111ff914d205",
            "fc4714cf-0d10-411a-b1a2-7869acb4d843",
            "9f2d1781-9f4c-4361-9750-7426a41b66e9",
            "f54a7268-1a14-4cd5-b8f7-840f10a623db",
            "875bddd3-efdc-454e-8715-951df6172e10",
            "8fc3838e-9f2c-4b93-a34c-c2b14555550a",
            "c979508e-d3c2-4b11-a5a2-69138b593769"
          ],
          "pending": [],
          "skipped": [],
          "duration": 42790,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "198f3865-f4ba-4415-b76a-7fb255be45f8",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4710,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42995/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42995/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42995/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42995/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42995/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3b80617c-cee9-4f08-9654-55e74ad242e6",
              "parentUUID": "198f3865-f4ba-4415-b76a-7fb255be45f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4740,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42995/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42995/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42995/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42995/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42995/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "45e165c6-18ac-41aa-ba33-96beb6c92f08",
              "parentUUID": "198f3865-f4ba-4415-b76a-7fb255be45f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4754,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42995/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42995/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42995/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42995/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42995/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42995/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1881bd43-c77d-42a9-adf7-f875d0593b3d",
              "parentUUID": "198f3865-f4ba-4415-b76a-7fb255be45f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3b80617c-cee9-4f08-9654-55e74ad242e6",
            "45e165c6-18ac-41aa-ba33-96beb6c92f08",
            "1881bd43-c77d-42a9-adf7-f875d0593b3d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14204,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8443259c-005a-40da-9802-94c4421211dc",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 824,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:42995/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:42995/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:42995/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:42995/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:42995/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:42995/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:42995/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "7ca02fba-fb39-4859-aea3-ded150e92f68",
              "parentUUID": "8443259c-005a-40da-9802-94c4421211dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 860,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:42995/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:42995/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:42995/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:42995/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:42995/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:42995/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:42995/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42995/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42995/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:42995/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42995/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42995/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "2ee8346e-88ea-43f6-a227-3715a97a16b2",
              "parentUUID": "8443259c-005a-40da-9802-94c4421211dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7ca02fba-fb39-4859-aea3-ded150e92f68",
            "2ee8346e-88ea-43f6-a227-3715a97a16b2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1684,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}