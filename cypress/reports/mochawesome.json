{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-15T18:48:22.441Z",
    "end": "2021-08-15T18:49:40.848Z",
    "duration": 78407,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b1877bff-b6dd-46d8-8e39-b724a1bf9cdf",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3ba709c7-67db-46e9-89d5-8f1664919224",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "50964449-e747-4bde-9f36-9ece1bdad78b",
              "parentUUID": "3ba709c7-67db-46e9-89d5-8f1664919224",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50964449-e747-4bde-9f36-9ece1bdad78b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "81649eac-b102-4927-882d-c9a6d3674092",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "3a1a4f9b-d11d-4cc0-84ca-5792f36491f5",
              "parentUUID": "81649eac-b102-4927-882d-c9a6d3674092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "ebdeb824-1e5c-4bd1-a9c2-c97712213e23",
              "parentUUID": "81649eac-b102-4927-882d-c9a6d3674092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "40e61ba6-93af-4101-a73b-a24b28411988",
              "parentUUID": "81649eac-b102-4927-882d-c9a6d3674092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "3689bb11-663e-4899-87fb-6c776963df6e",
              "parentUUID": "81649eac-b102-4927-882d-c9a6d3674092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "ff379bc8-e2f4-42e4-9a5c-f092d2616cec",
              "parentUUID": "81649eac-b102-4927-882d-c9a6d3674092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "408782f9-3f9c-4b7f-8737-a1981252c55c",
              "parentUUID": "81649eac-b102-4927-882d-c9a6d3674092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "028d831c-d6e2-451e-8a52-cdf093217fbf",
              "parentUUID": "81649eac-b102-4927-882d-c9a6d3674092",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a1a4f9b-d11d-4cc0-84ca-5792f36491f5",
            "ebdeb824-1e5c-4bd1-a9c2-c97712213e23",
            "40e61ba6-93af-4101-a73b-a24b28411988",
            "3689bb11-663e-4899-87fb-6c776963df6e",
            "ff379bc8-e2f4-42e4-9a5c-f092d2616cec",
            "408782f9-3f9c-4b7f-8737-a1981252c55c",
            "028d831c-d6e2-451e-8a52-cdf093217fbf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 799,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aad01d60-e9a9-48e0-b4f9-5f553b7dd973",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b5385448-7a9d-4f6b-9458-7d9cc8c676f2",
              "parentUUID": "aad01d60-e9a9-48e0-b4f9-5f553b7dd973",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "275472b2-bde2-4ed5-a645-5fec62522c0f",
              "parentUUID": "aad01d60-e9a9-48e0-b4f9-5f553b7dd973",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5385448-7a9d-4f6b-9458-7d9cc8c676f2",
            "275472b2-bde2-4ed5-a645-5fec62522c0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 257,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e7c1d1da-199c-44ad-b40e-f8c3b00799a7",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "53f43774-7d8c-4b1c-b3ea-39bb47f34989",
              "parentUUID": "e7c1d1da-199c-44ad-b40e-f8c3b00799a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "a6c80916-324b-451b-ac44-6991b0d49230",
              "parentUUID": "e7c1d1da-199c-44ad-b40e-f8c3b00799a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "46d22af7-ccf4-4f58-b205-6f3369993c7b",
              "parentUUID": "e7c1d1da-199c-44ad-b40e-f8c3b00799a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "89deba6e-016e-4b18-b453-6c803953410b",
              "parentUUID": "e7c1d1da-199c-44ad-b40e-f8c3b00799a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53f43774-7d8c-4b1c-b3ea-39bb47f34989",
            "a6c80916-324b-451b-ac44-6991b0d49230",
            "46d22af7-ccf4-4f58-b205-6f3369993c7b",
            "89deba6e-016e-4b18-b453-6c803953410b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 458,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "95a160d4-badc-409b-a5d9-4a1339d54b0e",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 264,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "4f34e15b-a3a0-4c23-b8b8-9f61892d6b33",
              "parentUUID": "95a160d4-badc-409b-a5d9-4a1339d54b0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "2c24857a-c2f4-48c9-b909-603e2688e452",
              "parentUUID": "95a160d4-badc-409b-a5d9-4a1339d54b0e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f34e15b-a3a0-4c23-b8b8-9f61892d6b33",
            "2c24857a-c2f4-48c9-b909-603e2688e452"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 525,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3e87571c-5e15-4b01-80a8-a8b8bce906a1",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 65,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "c9f35709-023f-4eb7-a8d0-1620449981ca",
              "parentUUID": "3e87571c-5e15-4b01-80a8-a8b8bce906a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "14568c31-1684-4765-a2c3-ba12e3b8d820",
              "parentUUID": "3e87571c-5e15-4b01-80a8-a8b8bce906a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9f35709-023f-4eb7-a8d0-1620449981ca",
            "14568c31-1684-4765-a2c3-ba12e3b8d820"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 144,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7519db55-3608-4138-85f7-aca3d415ab03",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 462,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "ef5a8649-def8-43a1-b48e-6c7d357ee7ca",
              "parentUUID": "7519db55-3608-4138-85f7-aca3d415ab03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "fe9e0ed0-5753-45ec-b062-ebd68fa022b8",
              "parentUUID": "7519db55-3608-4138-85f7-aca3d415ab03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef5a8649-def8-43a1-b48e-6c7d357ee7ca",
            "fe9e0ed0-5753-45ec-b062-ebd68fa022b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8861,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "939b2151-b2b9-4abb-9780-857f691746ff",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "e829206c-57e8-4bf3-aef0-3be9bc756e13",
              "parentUUID": "939b2151-b2b9-4abb-9780-857f691746ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "5b8e5133-e28a-47f6-a584-06e12ef7f9a9",
              "parentUUID": "939b2151-b2b9-4abb-9780-857f691746ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "8772c115-f405-4644-8ef7-667244678e2f",
              "parentUUID": "939b2151-b2b9-4abb-9780-857f691746ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e829206c-57e8-4bf3-aef0-3be9bc756e13",
            "5b8e5133-e28a-47f6-a584-06e12ef7f9a9",
            "8772c115-f405-4644-8ef7-667244678e2f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11781,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f8ba55cc-38ac-437c-81fd-da5a03a8293d",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "ac3fa58b-018d-420f-9b52-d189af7137e0",
              "parentUUID": "f8ba55cc-38ac-437c-81fd-da5a03a8293d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "58415282-e9d1-45db-b30f-1fe11fdc3798",
              "parentUUID": "f8ba55cc-38ac-437c-81fd-da5a03a8293d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "090322b1-6968-4b80-b8fc-d79d776236a9",
              "parentUUID": "f8ba55cc-38ac-437c-81fd-da5a03a8293d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "28bd2f8b-d0d3-4b40-aa6b-eea2962f19c6",
              "parentUUID": "f8ba55cc-38ac-437c-81fd-da5a03a8293d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ac3fa58b-018d-420f-9b52-d189af7137e0",
            "58415282-e9d1-45db-b30f-1fe11fdc3798",
            "090322b1-6968-4b80-b8fc-d79d776236a9",
            "28bd2f8b-d0d3-4b40-aa6b-eea2962f19c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2595,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "de794c66-d4a4-458b-9ec1-73557c7b4092",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4298,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35971/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35971/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35971/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35971/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35971/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6c16ded7-1d69-446f-9eb4-7bfd7909c4f4",
              "parentUUID": "de794c66-d4a4-458b-9ec1-73557c7b4092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35971/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35971/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35971/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35971/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35971/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bd68ad6f-d8dd-405d-8a4f-37ac86d4a932",
              "parentUUID": "de794c66-d4a4-458b-9ec1-73557c7b4092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35971/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35971/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35971/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35971/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35971/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2ab02afb-8428-405c-b7af-9b112fd8c42b",
              "parentUUID": "de794c66-d4a4-458b-9ec1-73557c7b4092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4268,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35971/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35971/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35971/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35971/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35971/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3d7eeea9-6dd6-4ab8-9df7-a3c6fcf70b9e",
              "parentUUID": "de794c66-d4a4-458b-9ec1-73557c7b4092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4242,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35971/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35971/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35971/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35971/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35971/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6ad966ca-679f-4fcd-97bc-682657542253",
              "parentUUID": "de794c66-d4a4-458b-9ec1-73557c7b4092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4254,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35971/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35971/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35971/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35971/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35971/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "20b3300d-89a9-43b7-8060-015428ebe678",
              "parentUUID": "de794c66-d4a4-458b-9ec1-73557c7b4092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4292,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35971/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35971/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35971/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35971/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35971/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b017b945-72aa-4e4a-9cc6-685dab2b51cd",
              "parentUUID": "de794c66-d4a4-458b-9ec1-73557c7b4092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4251,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35971/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35971/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35971/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35971/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35971/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ce17af47-1172-46ef-bcec-8e79278bf097",
              "parentUUID": "de794c66-d4a4-458b-9ec1-73557c7b4092",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4250,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35971/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35971/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35971/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35971/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35971/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e990db0a-8aa4-45e7-8439-8e5730ed9bbf",
              "parentUUID": "de794c66-d4a4-458b-9ec1-73557c7b4092",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6c16ded7-1d69-446f-9eb4-7bfd7909c4f4",
            "bd68ad6f-d8dd-405d-8a4f-37ac86d4a932",
            "2ab02afb-8428-405c-b7af-9b112fd8c42b",
            "3d7eeea9-6dd6-4ab8-9df7-a3c6fcf70b9e",
            "6ad966ca-679f-4fcd-97bc-682657542253",
            "20b3300d-89a9-43b7-8060-015428ebe678",
            "b017b945-72aa-4e4a-9cc6-685dab2b51cd",
            "ce17af47-1172-46ef-bcec-8e79278bf097",
            "e990db0a-8aa4-45e7-8439-8e5730ed9bbf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38433,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "67ca989d-ea41-48d5-821b-ad669f6391e6",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35971/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35971/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35971/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35971/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35971/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "143a9b42-7c4d-4746-a942-e325fe2fda48",
              "parentUUID": "67ca989d-ea41-48d5-821b-ad669f6391e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4268,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35971/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35971/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35971/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35971/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35971/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "eb00025d-f666-46e4-9aec-77272873d88f",
              "parentUUID": "67ca989d-ea41-48d5-821b-ad669f6391e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4274,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35971/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35971/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35971/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35971/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35971/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35971/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "00f25217-1415-4d46-88b3-43c9fcfcac97",
              "parentUUID": "67ca989d-ea41-48d5-821b-ad669f6391e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "143a9b42-7c4d-4746-a942-e325fe2fda48",
            "eb00025d-f666-46e4-9aec-77272873d88f",
            "00f25217-1415-4d46-88b3-43c9fcfcac97"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12794,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dcd32667-94c3-4a75-8dd2-f85f0c5c1a12",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 373,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35971/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35971/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35971/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35971/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35971/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35971/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35971/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "2b5137d1-1ad9-44fc-9ab1-7431c65eedf2",
              "parentUUID": "dcd32667-94c3-4a75-8dd2-f85f0c5c1a12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 364,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35971/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35971/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35971/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35971/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35971/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35971/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35971/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35971/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35971/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35971/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35971/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35971/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "27c7236e-95c6-467b-9092-b4616c1f5025",
              "parentUUID": "dcd32667-94c3-4a75-8dd2-f85f0c5c1a12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2b5137d1-1ad9-44fc-9ab1-7431c65eedf2",
            "27c7236e-95c6-467b-9092-b4616c1f5025"
          ],
          "pending": [],
          "skipped": [],
          "duration": 737,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}