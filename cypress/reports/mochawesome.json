{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-14T18:26:59.420Z",
    "end": "2021-08-14T18:28:45.238Z",
    "duration": 105818,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f9d68012-db4f-4f38-9f51-370975b62f52",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b4a80e09-6c50-4016-b300-1ff4c8a3c9e5",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 1012,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "c5ef566d-0383-401a-b9e8-0d2628803607",
              "parentUUID": "b4a80e09-6c50-4016-b300-1ff4c8a3c9e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5ef566d-0383-401a-b9e8-0d2628803607"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1012,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a10a3ef3-3fae-44f2-8219-c54136a0a083",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 714,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "64870c2d-6983-4d5e-b3bf-fedbaa0a8879",
              "parentUUID": "a10a3ef3-3fae-44f2-8219-c54136a0a083",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "cf33f375-62d9-4c8d-82f9-2c3f39fa430f",
              "parentUUID": "a10a3ef3-3fae-44f2-8219-c54136a0a083",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "b646b1a3-819d-4360-bd76-025385affffd",
              "parentUUID": "a10a3ef3-3fae-44f2-8219-c54136a0a083",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "c0097713-8ade-43a4-b8af-efd668d34b22",
              "parentUUID": "a10a3ef3-3fae-44f2-8219-c54136a0a083",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "ec98c541-f701-4e39-8c96-18ba02d685c5",
              "parentUUID": "a10a3ef3-3fae-44f2-8219-c54136a0a083",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 547,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "23991d99-7714-43b6-a41a-3396a9f70276",
              "parentUUID": "a10a3ef3-3fae-44f2-8219-c54136a0a083",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "92269fd2-c708-40ec-8cfd-231081fa5f44",
              "parentUUID": "a10a3ef3-3fae-44f2-8219-c54136a0a083",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64870c2d-6983-4d5e-b3bf-fedbaa0a8879",
            "cf33f375-62d9-4c8d-82f9-2c3f39fa430f",
            "b646b1a3-819d-4360-bd76-025385affffd",
            "c0097713-8ade-43a4-b8af-efd668d34b22",
            "ec98c541-f701-4e39-8c96-18ba02d685c5",
            "23991d99-7714-43b6-a41a-3396a9f70276",
            "92269fd2-c708-40ec-8cfd-231081fa5f44"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3626,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "80987257-89f6-4ae7-adcb-896821fb5371",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 384,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "03dcf843-e8cd-43eb-92b8-f79fee67ea9a",
              "parentUUID": "80987257-89f6-4ae7-adcb-896821fb5371",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 625,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "63bc50b3-5748-4251-835d-e09cc8bf79bd",
              "parentUUID": "80987257-89f6-4ae7-adcb-896821fb5371",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03dcf843-e8cd-43eb-92b8-f79fee67ea9a",
            "63bc50b3-5748-4251-835d-e09cc8bf79bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1009,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2bb0fb31-9ee1-418a-8e68-3ab80bf286fc",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 439,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "65f992f0-b490-4321-923a-0948f2639971",
              "parentUUID": "2bb0fb31-9ee1-418a-8e68-3ab80bf286fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 573,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "e96618e5-dfb6-4caf-afca-66fbdbd12908",
              "parentUUID": "2bb0fb31-9ee1-418a-8e68-3ab80bf286fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 773,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "9a379ae7-668c-49aa-b0f3-616bf7bc41c6",
              "parentUUID": "2bb0fb31-9ee1-418a-8e68-3ab80bf286fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 560,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "dc5490ad-3f05-452d-b79b-84d2b0019349",
              "parentUUID": "2bb0fb31-9ee1-418a-8e68-3ab80bf286fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "65f992f0-b490-4321-923a-0948f2639971",
            "e96618e5-dfb6-4caf-afca-66fbdbd12908",
            "9a379ae7-668c-49aa-b0f3-616bf7bc41c6",
            "dc5490ad-3f05-452d-b79b-84d2b0019349"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2345,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c873205f-1c9a-4306-922d-3cc97363a1a9",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 1015,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "029aa06a-28f4-44c0-ae35-2e46949e1f5f",
              "parentUUID": "c873205f-1c9a-4306-922d-3cc97363a1a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 842,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "1470f04c-82d0-47bc-a180-bd7c790fd90b",
              "parentUUID": "c873205f-1c9a-4306-922d-3cc97363a1a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "029aa06a-28f4-44c0-ae35-2e46949e1f5f",
            "1470f04c-82d0-47bc-a180-bd7c790fd90b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1857,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f871da10-abbf-4a6f-a4c2-f09160158ab0",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 448,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "01c7ca00-2083-4fa9-acf7-63115c25e0cd",
              "parentUUID": "f871da10-abbf-4a6f-a4c2-f09160158ab0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 422,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "a3a46c5c-0539-4bb4-a056-4930fae503f6",
              "parentUUID": "f871da10-abbf-4a6f-a4c2-f09160158ab0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01c7ca00-2083-4fa9-acf7-63115c25e0cd",
            "a3a46c5c-0539-4bb4-a056-4930fae503f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 870,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a200baad-26a6-4eb5-a368-a085b82f0318",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 799,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "77e999f8-0dcc-467f-9ac8-b8ba3e2a8225",
              "parentUUID": "a200baad-26a6-4eb5-a368-a085b82f0318",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10766,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "a88d859f-6b7d-4f1d-9938-387eb94fdc18",
              "parentUUID": "a200baad-26a6-4eb5-a368-a085b82f0318",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77e999f8-0dcc-467f-9ac8-b8ba3e2a8225",
            "a88d859f-6b7d-4f1d-9938-387eb94fdc18"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11565,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b0450d8e-d533-4bdd-9a26-1a6906109c62",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2839,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "26073ad6-8c55-4504-b4d3-4a8ff9db774a",
              "parentUUID": "b0450d8e-d533-4bdd-9a26-1a6906109c62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 10481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "c174657a-5c63-4450-a4b8-b4d82b7bcfaa",
              "parentUUID": "b0450d8e-d533-4bdd-9a26-1a6906109c62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2687,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "0da8489c-b2ca-4bdf-9203-6baf9a0928f1",
              "parentUUID": "b0450d8e-d533-4bdd-9a26-1a6906109c62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26073ad6-8c55-4504-b4d3-4a8ff9db774a",
            "c174657a-5c63-4450-a4b8-b4d82b7bcfaa",
            "0da8489c-b2ca-4bdf-9203-6baf9a0928f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16007,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "13bd84a9-80f5-4c16-845b-e8b7c6413390",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "18ef5300-8f24-4908-9607-664ea382e8d9",
              "parentUUID": "13bd84a9-80f5-4c16-845b-e8b7c6413390",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "89e66b2d-017d-4d73-b00d-42d0faf9cd66",
              "parentUUID": "13bd84a9-80f5-4c16-845b-e8b7c6413390",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 327,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "7dc5e80f-99ac-4ace-847f-c2d2360c333b",
              "parentUUID": "13bd84a9-80f5-4c16-845b-e8b7c6413390",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "9d426f1e-3589-42ee-90a8-bdce2f8f7f89",
              "parentUUID": "13bd84a9-80f5-4c16-845b-e8b7c6413390",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18ef5300-8f24-4908-9607-664ea382e8d9",
            "89e66b2d-017d-4d73-b00d-42d0faf9cd66",
            "7dc5e80f-99ac-4ace-847f-c2d2360c333b",
            "9d426f1e-3589-42ee-90a8-bdce2f8f7f89"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4123,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9a4f2593-2d46-40da-9537-b43b12002508",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5157,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38757/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38757/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38757/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38757/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38757/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "206e7069-6c70-48b4-83da-db7501864a36",
              "parentUUID": "9a4f2593-2d46-40da-9537-b43b12002508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5383,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38757/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38757/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38757/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38757/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38757/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e264908d-758d-48a2-bc06-a2de6f0e2ea8",
              "parentUUID": "9a4f2593-2d46-40da-9537-b43b12002508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 5561,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38757/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38757/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38757/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38757/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38757/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7ec51c1f-0a6c-443c-bf91-46b5ee9ca017",
              "parentUUID": "9a4f2593-2d46-40da-9537-b43b12002508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4793,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38757/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38757/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38757/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38757/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38757/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cde3ac55-3cd4-4656-be17-354c72751116",
              "parentUUID": "9a4f2593-2d46-40da-9537-b43b12002508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5049,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38757/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38757/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38757/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38757/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38757/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0693175e-0ef3-4851-827b-cf9075834a60",
              "parentUUID": "9a4f2593-2d46-40da-9537-b43b12002508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4670,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38757/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38757/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38757/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38757/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38757/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "35785bdb-b1ec-4e3f-8bd3-017dcf607f1d",
              "parentUUID": "9a4f2593-2d46-40da-9537-b43b12002508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4830,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38757/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38757/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38757/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38757/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38757/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b9bf9eae-695f-4e4b-97f0-d523e455e373",
              "parentUUID": "9a4f2593-2d46-40da-9537-b43b12002508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4696,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38757/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38757/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38757/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38757/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38757/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ff0a22e4-ce30-48f2-99d6-2e1cf4d6c82b",
              "parentUUID": "9a4f2593-2d46-40da-9537-b43b12002508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4830,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38757/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38757/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38757/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38757/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38757/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "db8179cd-4683-4150-a9f3-0a1744070bd0",
              "parentUUID": "9a4f2593-2d46-40da-9537-b43b12002508",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "206e7069-6c70-48b4-83da-db7501864a36",
            "e264908d-758d-48a2-bc06-a2de6f0e2ea8",
            "7ec51c1f-0a6c-443c-bf91-46b5ee9ca017",
            "cde3ac55-3cd4-4656-be17-354c72751116",
            "0693175e-0ef3-4851-827b-cf9075834a60",
            "35785bdb-b1ec-4e3f-8bd3-017dcf607f1d",
            "b9bf9eae-695f-4e4b-97f0-d523e455e373",
            "ff0a22e4-ce30-48f2-99d6-2e1cf4d6c82b",
            "db8179cd-4683-4150-a9f3-0a1744070bd0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 44969,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e024b1da-0f45-4e32-94f1-cabb3391224e",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4683,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38757/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38757/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38757/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38757/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38757/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c94b1c94-2a56-4feb-b3aa-3880e13c8734",
              "parentUUID": "e024b1da-0f45-4e32-94f1-cabb3391224e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4776,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38757/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38757/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38757/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38757/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38757/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d9a76eb2-eb8e-4439-a700-ef471299f10a",
              "parentUUID": "e024b1da-0f45-4e32-94f1-cabb3391224e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5030,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38757/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38757/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38757/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38757/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38757/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38757/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4dd5e37e-41eb-4de2-be87-41f909fb26f7",
              "parentUUID": "e024b1da-0f45-4e32-94f1-cabb3391224e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c94b1c94-2a56-4feb-b3aa-3880e13c8734",
            "d9a76eb2-eb8e-4439-a700-ef471299f10a",
            "4dd5e37e-41eb-4de2-be87-41f909fb26f7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14489,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a9312884-2e31-4924-b5d5-cdd5b312baf4",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 911,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:38757/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:38757/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:38757/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:38757/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:38757/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:38757/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:38757/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "b23ab119-b137-4e51-aa52-e668699fc250",
              "parentUUID": "a9312884-2e31-4924-b5d5-cdd5b312baf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 800,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:38757/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:38757/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:38757/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:38757/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:38757/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:38757/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:38757/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38757/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38757/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:38757/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38757/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38757/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "7ae105b9-3154-4089-b981-67bb6a83af73",
              "parentUUID": "a9312884-2e31-4924-b5d5-cdd5b312baf4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b23ab119-b137-4e51-aa52-e668699fc250",
            "7ae105b9-3154-4089-b981-67bb6a83af73"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1711,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}