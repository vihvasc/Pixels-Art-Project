{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-15T20:54:19.346Z",
    "end": "2021-08-15T20:55:42.693Z",
    "duration": 83347,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bd2c22ad-a302-4cd4-a560-2b1dd5ec839e",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5d011ce9-ebe6-4860-be4b-f2ad74143813",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "3ec402b3-eac6-4098-aa9d-01cf9d13bb43",
              "parentUUID": "5d011ce9-ebe6-4860-be4b-f2ad74143813",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ec402b3-eac6-4098-aa9d-01cf9d13bb43"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 288,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "409b8c78-b37d-4e76-abf4-30361d89f768",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "a6cb6602-4504-4056-9b61-9d7e748123fd",
              "parentUUID": "409b8c78-b37d-4e76-abf4-30361d89f768",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "bbe5e5ea-3c8d-4c93-a328-1cbcec81a10f",
              "parentUUID": "409b8c78-b37d-4e76-abf4-30361d89f768",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "e11a8bbd-6824-4c36-b8cf-5d4b77f97907",
              "parentUUID": "409b8c78-b37d-4e76-abf4-30361d89f768",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "0ea26b72-cbfd-4d1f-94ff-781e3bc3d1b7",
              "parentUUID": "409b8c78-b37d-4e76-abf4-30361d89f768",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "e9b3ee7e-eeab-49c9-bf44-f066096f5071",
              "parentUUID": "409b8c78-b37d-4e76-abf4-30361d89f768",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "1d24cb86-f9e6-4262-b6ae-a032486ec7e5",
              "parentUUID": "409b8c78-b37d-4e76-abf4-30361d89f768",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "7adb0373-9571-49c8-95c5-add9638dafb0",
              "parentUUID": "409b8c78-b37d-4e76-abf4-30361d89f768",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6cb6602-4504-4056-9b61-9d7e748123fd",
            "bbe5e5ea-3c8d-4c93-a328-1cbcec81a10f",
            "e11a8bbd-6824-4c36-b8cf-5d4b77f97907",
            "0ea26b72-cbfd-4d1f-94ff-781e3bc3d1b7",
            "e9b3ee7e-eeab-49c9-bf44-f066096f5071",
            "1d24cb86-f9e6-4262-b6ae-a032486ec7e5",
            "7adb0373-9571-49c8-95c5-add9638dafb0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1133,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b6342dec-8212-40e1-bf44-1e91a194ab04",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "7200c562-8fbb-41e5-ae37-bb20f6202415",
              "parentUUID": "b6342dec-8212-40e1-bf44-1e91a194ab04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "94159320-d947-41c4-9010-15c6de3f5fab",
              "parentUUID": "b6342dec-8212-40e1-bf44-1e91a194ab04",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7200c562-8fbb-41e5-ae37-bb20f6202415",
            "94159320-d947-41c4-9010-15c6de3f5fab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 350,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a896dba4-5edd-4f8f-bcb2-8d16d9b30e53",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "ca10f628-aa5c-4d7a-9dd0-4716a0aeef0d",
              "parentUUID": "a896dba4-5edd-4f8f-bcb2-8d16d9b30e53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "65342406-91e6-4b33-91b1-a10829b70e31",
              "parentUUID": "a896dba4-5edd-4f8f-bcb2-8d16d9b30e53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "212edeba-d6a1-4ecc-b5b1-350d8d0c2ca5",
              "parentUUID": "a896dba4-5edd-4f8f-bcb2-8d16d9b30e53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "5dbe66ae-dfd4-480e-bc94-f1275da5583e",
              "parentUUID": "a896dba4-5edd-4f8f-bcb2-8d16d9b30e53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca10f628-aa5c-4d7a-9dd0-4716a0aeef0d",
            "65342406-91e6-4b33-91b1-a10829b70e31",
            "212edeba-d6a1-4ecc-b5b1-350d8d0c2ca5",
            "5dbe66ae-dfd4-480e-bc94-f1275da5583e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 800,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "294cc03c-b112-4c36-b0e9-307fa94ca88b",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 384,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "e51ccac9-fabf-4862-87f6-5bf58a95db98",
              "parentUUID": "294cc03c-b112-4c36-b0e9-307fa94ca88b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 294,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "93159ecc-baa8-4f04-a9eb-8600796d8410",
              "parentUUID": "294cc03c-b112-4c36-b0e9-307fa94ca88b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e51ccac9-fabf-4862-87f6-5bf58a95db98",
            "93159ecc-baa8-4f04-a9eb-8600796d8410"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 678,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f352d8c3-1eb2-47c6-a8d0-8c852ec155e5",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "23df18d9-a3cd-4184-b9cd-7ecc71bd5356",
              "parentUUID": "f352d8c3-1eb2-47c6-a8d0-8c852ec155e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "374a055e-73da-44db-b039-b03087c63b42",
              "parentUUID": "f352d8c3-1eb2-47c6-a8d0-8c852ec155e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23df18d9-a3cd-4184-b9cd-7ecc71bd5356",
            "374a055e-73da-44db-b039-b03087c63b42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 310,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "72a12f39-8115-490c-8177-89f155ee4231",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 547,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "38e1220f-34da-4cdc-93d8-cc5e2a865055",
              "parentUUID": "72a12f39-8115-490c-8177-89f155ee4231",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8579,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "4561ecfa-10ca-48fa-89d5-5ba350f0760a",
              "parentUUID": "72a12f39-8115-490c-8177-89f155ee4231",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38e1220f-34da-4cdc-93d8-cc5e2a865055",
            "4561ecfa-10ca-48fa-89d5-5ba350f0760a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9126,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cbd16ddc-1377-48c4-81e4-cbfe68e26598",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "61900680-f321-4863-8df0-57eb92e82e33",
              "parentUUID": "cbd16ddc-1377-48c4-81e4-cbfe68e26598",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "f67b6d39-4efd-41e8-a8b7-4898351affb8",
              "parentUUID": "cbd16ddc-1377-48c4-81e4-cbfe68e26598",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "0591cbfa-22cd-4253-9d4d-12ac39a7d3f3",
              "parentUUID": "cbd16ddc-1377-48c4-81e4-cbfe68e26598",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61900680-f321-4863-8df0-57eb92e82e33",
            "f67b6d39-4efd-41e8-a8b7-4898351affb8",
            "0591cbfa-22cd-4253-9d4d-12ac39a7d3f3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11942,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c14e4e2-28f3-4562-b468-1f2c74598b28",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "4f07bc5f-3bb8-4556-9c73-dcaf342c0af1",
              "parentUUID": "1c14e4e2-28f3-4562-b468-1f2c74598b28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "69b25e16-3185-435e-93a9-11ef1b73bb1f",
              "parentUUID": "1c14e4e2-28f3-4562-b468-1f2c74598b28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "6e8790f3-8796-4bb2-85e9-8d8827497e85",
              "parentUUID": "1c14e4e2-28f3-4562-b468-1f2c74598b28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "485b670d-fab5-4dfa-8ae6-080f3eaffc22",
              "parentUUID": "1c14e4e2-28f3-4562-b468-1f2c74598b28",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f07bc5f-3bb8-4556-9c73-dcaf342c0af1",
            "69b25e16-3185-435e-93a9-11ef1b73bb1f",
            "6e8790f3-8796-4bb2-85e9-8d8827497e85",
            "485b670d-fab5-4dfa-8ae6-080f3eaffc22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2817,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8f095629-c121-48c3-8292-b8767c734da7",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4451,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44655/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44655/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44655/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44655/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44655/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ae318913-a9d7-47dd-996f-4b519092b415",
              "parentUUID": "8f095629-c121-48c3-8292-b8767c734da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4421,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44655/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44655/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44655/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44655/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44655/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cfe7e4dd-eeaa-401c-9323-6f702a3e11cd",
              "parentUUID": "8f095629-c121-48c3-8292-b8767c734da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4399,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44655/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44655/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44655/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44655/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44655/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cf8a640d-b3ae-4ee8-8fcf-bc534fd49a8e",
              "parentUUID": "8f095629-c121-48c3-8292-b8767c734da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4476,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44655/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44655/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44655/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44655/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44655/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "eae4fd73-fdde-44d7-9e68-154bbdc5a06c",
              "parentUUID": "8f095629-c121-48c3-8292-b8767c734da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4391,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44655/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44655/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44655/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44655/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44655/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5376fe12-27ed-4949-ad0c-e7b766f93303",
              "parentUUID": "8f095629-c121-48c3-8292-b8767c734da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4528,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44655/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44655/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44655/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44655/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44655/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a3bcb715-5d54-4356-8b54-f6ef5df601b8",
              "parentUUID": "8f095629-c121-48c3-8292-b8767c734da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4466,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44655/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44655/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44655/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44655/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44655/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0a57086c-1d54-45ff-8848-86237dfa5029",
              "parentUUID": "8f095629-c121-48c3-8292-b8767c734da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4457,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44655/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44655/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44655/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44655/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44655/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7ac971dd-3081-447a-956b-556a4da0a663",
              "parentUUID": "8f095629-c121-48c3-8292-b8767c734da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4384,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44655/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44655/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44655/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44655/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44655/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d6cbad71-183d-4a6f-87ca-ac13ada30383",
              "parentUUID": "8f095629-c121-48c3-8292-b8767c734da7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ae318913-a9d7-47dd-996f-4b519092b415",
            "cfe7e4dd-eeaa-401c-9323-6f702a3e11cd",
            "cf8a640d-b3ae-4ee8-8fcf-bc534fd49a8e",
            "eae4fd73-fdde-44d7-9e68-154bbdc5a06c",
            "5376fe12-27ed-4949-ad0c-e7b766f93303",
            "a3bcb715-5d54-4356-8b54-f6ef5df601b8",
            "0a57086c-1d54-45ff-8848-86237dfa5029",
            "7ac971dd-3081-447a-956b-556a4da0a663",
            "d6cbad71-183d-4a6f-87ca-ac13ada30383"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39973,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "efd0049c-1dd2-47e0-a305-f4c0aacadbbd",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4444,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44655/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44655/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44655/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44655/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44655/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "96f553f6-d6ca-4dee-a75d-1885f83980d2",
              "parentUUID": "efd0049c-1dd2-47e0-a305-f4c0aacadbbd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4371,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44655/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44655/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44655/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44655/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44655/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e077f275-5f88-41fb-9aae-74afe53a2976",
              "parentUUID": "efd0049c-1dd2-47e0-a305-f4c0aacadbbd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4541,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44655/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44655/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44655/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44655/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44655/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44655/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "79c3e97e-a602-411f-9962-ce323e291af9",
              "parentUUID": "efd0049c-1dd2-47e0-a305-f4c0aacadbbd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "96f553f6-d6ca-4dee-a75d-1885f83980d2",
            "e077f275-5f88-41fb-9aae-74afe53a2976",
            "79c3e97e-a602-411f-9962-ce323e291af9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13356,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1bf9c2ea-0c7f-4c28-8abc-9cbd97fc1fac",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 620,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44655/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44655/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44655/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44655/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44655/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44655/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44655/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "282638b3-4f0c-4251-a797-4d67c5bfd401",
              "parentUUID": "1bf9c2ea-0c7f-4c28-8abc-9cbd97fc1fac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 676,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44655/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44655/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44655/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44655/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44655/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44655/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44655/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44655/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44655/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44655/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44655/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44655/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "8cd16d79-2940-4d23-ae18-157578042c0b",
              "parentUUID": "1bf9c2ea-0c7f-4c28-8abc-9cbd97fc1fac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "282638b3-4f0c-4251-a797-4d67c5bfd401",
            "8cd16d79-2940-4d23-ae18-157578042c0b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1296,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}