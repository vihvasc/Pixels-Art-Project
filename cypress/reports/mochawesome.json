{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-24T13:30:08.490Z",
    "end": "2021-08-24T13:31:31.226Z",
    "duration": 82736,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2b41cebd-3cf3-4476-81cf-c5350126b61c",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c0be976a-78ff-4aea-bdbf-0cfba6f245d3",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "be8624b8-6389-4e70-ad12-8da892c91089",
              "parentUUID": "c0be976a-78ff-4aea-bdbf-0cfba6f245d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be8624b8-6389-4e70-ad12-8da892c91089"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 221,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cf72d923-30ad-4a0a-8bb0-0ccb973fb7c3",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "745293e1-3afc-47d5-bbb3-7f8b40d88255",
              "parentUUID": "cf72d923-30ad-4a0a-8bb0-0ccb973fb7c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "8abc7e43-a373-441d-8105-4574c52b78f2",
              "parentUUID": "cf72d923-30ad-4a0a-8bb0-0ccb973fb7c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "5e275b81-c539-49ed-933d-516d0a14e18d",
              "parentUUID": "cf72d923-30ad-4a0a-8bb0-0ccb973fb7c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "d5dcb888-2c90-4ef1-9b78-eda53062528c",
              "parentUUID": "cf72d923-30ad-4a0a-8bb0-0ccb973fb7c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "b0bcfcdd-ddf0-446b-b46a-7b0d9883539f",
              "parentUUID": "cf72d923-30ad-4a0a-8bb0-0ccb973fb7c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "bf81a6a3-e005-43a8-ab9f-5e2e6f59b19d",
              "parentUUID": "cf72d923-30ad-4a0a-8bb0-0ccb973fb7c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "23b3ab49-d162-4470-9151-0f339e86d5e6",
              "parentUUID": "cf72d923-30ad-4a0a-8bb0-0ccb973fb7c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "745293e1-3afc-47d5-bbb3-7f8b40d88255",
            "8abc7e43-a373-441d-8105-4574c52b78f2",
            "5e275b81-c539-49ed-933d-516d0a14e18d",
            "d5dcb888-2c90-4ef1-9b78-eda53062528c",
            "b0bcfcdd-ddf0-446b-b46a-7b0d9883539f",
            "bf81a6a3-e005-43a8-ab9f-5e2e6f59b19d",
            "23b3ab49-d162-4470-9151-0f339e86d5e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1209,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "939ad2b5-4a22-4efb-bd90-75f16c0b467c",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b95119a2-59f0-4aaf-b3c7-b9312bdb3503",
              "parentUUID": "939ad2b5-4a22-4efb-bd90-75f16c0b467c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "6afabd81-696c-4ba9-a23b-8f3f2f5169f1",
              "parentUUID": "939ad2b5-4a22-4efb-bd90-75f16c0b467c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b95119a2-59f0-4aaf-b3c7-b9312bdb3503",
            "6afabd81-696c-4ba9-a23b-8f3f2f5169f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 349,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e879340a-e3bc-43fc-abe1-891e0269d5d0",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "6ff9b1ca-82c7-4cc7-adeb-4b15418a0bca",
              "parentUUID": "e879340a-e3bc-43fc-abe1-891e0269d5d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "e5c3db3c-c6b4-4c4f-8453-41004d44091d",
              "parentUUID": "e879340a-e3bc-43fc-abe1-891e0269d5d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 293,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "7eee562f-d0c4-4bce-a530-961dfa0b7ace",
              "parentUUID": "e879340a-e3bc-43fc-abe1-891e0269d5d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "881e8037-e7ce-4563-b8cf-445941ee62d0",
              "parentUUID": "e879340a-e3bc-43fc-abe1-891e0269d5d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ff9b1ca-82c7-4cc7-adeb-4b15418a0bca",
            "e5c3db3c-c6b4-4c4f-8453-41004d44091d",
            "7eee562f-d0c4-4bce-a530-961dfa0b7ace",
            "881e8037-e7ce-4563-b8cf-445941ee62d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 710,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "288b0439-4ab6-4f1a-a6e2-ec1d0bde615b",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 370,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "0c00b587-8544-4b4f-b939-660955607b90",
              "parentUUID": "288b0439-4ab6-4f1a-a6e2-ec1d0bde615b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "f5f65c4d-b293-444a-a7c4-851a040b2e2d",
              "parentUUID": "288b0439-4ab6-4f1a-a6e2-ec1d0bde615b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c00b587-8544-4b4f-b939-660955607b90",
            "f5f65c4d-b293-444a-a7c4-851a040b2e2d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 694,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "be6e7e04-8cf8-4d2f-b8f6-efa01adde18c",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "35b92b72-1e87-40ab-ae20-7822adcd8573",
              "parentUUID": "be6e7e04-8cf8-4d2f-b8f6-efa01adde18c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "c7668d2a-def1-404d-83a4-edae5a10d079",
              "parentUUID": "be6e7e04-8cf8-4d2f-b8f6-efa01adde18c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35b92b72-1e87-40ab-ae20-7822adcd8573",
            "c7668d2a-def1-404d-83a4-edae5a10d079"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 279,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c0563b31-f2f5-4b05-a7bb-fd6e3eb3ce44",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 489,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "07771a48-75ef-4d7c-8198-4388d9b40e14",
              "parentUUID": "c0563b31-f2f5-4b05-a7bb-fd6e3eb3ce44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8769,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "9e49a8ff-9fdb-471c-bc29-fe9c263e8bfe",
              "parentUUID": "c0563b31-f2f5-4b05-a7bb-fd6e3eb3ce44",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "07771a48-75ef-4d7c-8198-4388d9b40e14",
            "9e49a8ff-9fdb-471c-bc29-fe9c263e8bfe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9258,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "57bafc67-35d8-44c0-8c7e-d9fb74e8f6a7",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "44af5a44-9515-4e1a-a333-32a48fe29f1c",
              "parentUUID": "57bafc67-35d8-44c0-8c7e-d9fb74e8f6a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8706,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "ba0517af-e07d-4370-aa76-5bba3e0e5e9f",
              "parentUUID": "57bafc67-35d8-44c0-8c7e-d9fb74e8f6a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1633,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "473905e3-eccf-4db9-b58b-48f8023d52d4",
              "parentUUID": "57bafc67-35d8-44c0-8c7e-d9fb74e8f6a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44af5a44-9515-4e1a-a333-32a48fe29f1c",
            "ba0517af-e07d-4370-aa76-5bba3e0e5e9f",
            "473905e3-eccf-4db9-b58b-48f8023d52d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12588,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af098aba-d953-4aa3-b031-1d833cc7d6a2",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "72a00707-6d19-4944-8b1a-e518730a02dd",
              "parentUUID": "af098aba-d953-4aa3-b031-1d833cc7d6a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "3ce26679-2652-49da-8185-1b5b9d339046",
              "parentUUID": "af098aba-d953-4aa3-b031-1d833cc7d6a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "4156c010-b45b-4100-b5e2-323dc852031f",
              "parentUUID": "af098aba-d953-4aa3-b031-1d833cc7d6a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "506766be-bb52-445c-8ccc-44255c7618f9",
              "parentUUID": "af098aba-d953-4aa3-b031-1d833cc7d6a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72a00707-6d19-4944-8b1a-e518730a02dd",
            "3ce26679-2652-49da-8185-1b5b9d339046",
            "4156c010-b45b-4100-b5e2-323dc852031f",
            "506766be-bb52-445c-8ccc-44255c7618f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2754,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2c49e695-c08f-4b72-840a-9b6c4b409ff9",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4393,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40501/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40501/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40501/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40501/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40501/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5f4d644a-d8cc-4b3c-a219-71d25adeafb6",
              "parentUUID": "2c49e695-c08f-4b72-840a-9b6c4b409ff9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4379,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40501/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40501/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40501/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40501/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40501/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7e40822e-99f3-41e1-84b0-5ad4be7962b5",
              "parentUUID": "2c49e695-c08f-4b72-840a-9b6c4b409ff9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4363,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40501/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40501/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40501/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40501/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40501/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "41cc4e7d-5acf-42d6-bfc3-b83c881ebdf4",
              "parentUUID": "2c49e695-c08f-4b72-840a-9b6c4b409ff9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4336,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40501/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40501/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40501/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40501/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40501/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a5309f2b-2f9a-48e9-9273-4140257cc392",
              "parentUUID": "2c49e695-c08f-4b72-840a-9b6c4b409ff9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4372,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40501/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40501/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40501/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40501/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40501/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d2ce2cc1-1e49-43fb-8cdb-eceda26440c2",
              "parentUUID": "2c49e695-c08f-4b72-840a-9b6c4b409ff9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4351,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40501/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40501/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40501/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40501/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40501/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "caecf227-f3f6-41dc-b50d-dcb5e94221cb",
              "parentUUID": "2c49e695-c08f-4b72-840a-9b6c4b409ff9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4327,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40501/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40501/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40501/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40501/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40501/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "05382aa9-6251-46e0-9e4a-ad3eb538c13b",
              "parentUUID": "2c49e695-c08f-4b72-840a-9b6c4b409ff9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4414,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40501/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40501/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40501/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40501/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40501/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1d3d82fe-de14-4600-a962-facb4c218d69",
              "parentUUID": "2c49e695-c08f-4b72-840a-9b6c4b409ff9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4348,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40501/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40501/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40501/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40501/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40501/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "289f6256-e6f8-4746-91aa-71b17f90fee7",
              "parentUUID": "2c49e695-c08f-4b72-840a-9b6c4b409ff9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5f4d644a-d8cc-4b3c-a219-71d25adeafb6",
            "7e40822e-99f3-41e1-84b0-5ad4be7962b5",
            "41cc4e7d-5acf-42d6-bfc3-b83c881ebdf4",
            "a5309f2b-2f9a-48e9-9273-4140257cc392",
            "d2ce2cc1-1e49-43fb-8cdb-eceda26440c2",
            "caecf227-f3f6-41dc-b50d-dcb5e94221cb",
            "05382aa9-6251-46e0-9e4a-ad3eb538c13b",
            "1d3d82fe-de14-4600-a962-facb4c218d69",
            "289f6256-e6f8-4746-91aa-71b17f90fee7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39283,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8fe5c817-6ad2-4ebe-bb96-1dbe14c19782",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4366,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40501/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40501/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40501/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40501/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40501/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "851d24d8-779f-421a-85fb-cca12b4b36cc",
              "parentUUID": "8fe5c817-6ad2-4ebe-bb96-1dbe14c19782",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4375,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40501/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40501/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40501/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40501/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40501/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "94afcb57-bdec-4d34-8901-77b753379762",
              "parentUUID": "8fe5c817-6ad2-4ebe-bb96-1dbe14c19782",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4360,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40501/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40501/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40501/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40501/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40501/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40501/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a25cb000-61c2-44af-845b-64df47e5c00e",
              "parentUUID": "8fe5c817-6ad2-4ebe-bb96-1dbe14c19782",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "851d24d8-779f-421a-85fb-cca12b4b36cc",
            "94afcb57-bdec-4d34-8901-77b753379762",
            "a25cb000-61c2-44af-845b-64df47e5c00e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13101,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7ed6b859-5826-42ec-91b9-9399ce163e66",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 489,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:40501/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40501/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:40501/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:40501/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:40501/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:40501/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40501/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0519689a-ed08-4736-87eb-7cf4c7cb0fec",
              "parentUUID": "7ed6b859-5826-42ec-91b9-9399ce163e66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 519,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:40501/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40501/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:40501/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:40501/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:40501/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:40501/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:40501/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40501/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40501/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40501/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40501/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40501/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "b652f0a9-868c-49e2-ba58-c6ce19433ebb",
              "parentUUID": "7ed6b859-5826-42ec-91b9-9399ce163e66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0519689a-ed08-4736-87eb-7cf4c7cb0fec",
            "b652f0a9-868c-49e2-ba58-c6ce19433ebb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1008,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}