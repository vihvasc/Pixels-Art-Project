{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-13T21:39:33.981Z",
    "end": "2021-08-13T21:40:53.504Z",
    "duration": 79523,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "96e73684-3208-4f9c-9d03-01933aa80cc3",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ba538e25-7e13-4397-a0f7-5dc9bc6d3e65",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 486,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "9a807776-3efe-41b7-af42-35d181cf5bb8",
              "parentUUID": "ba538e25-7e13-4397-a0f7-5dc9bc6d3e65",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9a807776-3efe-41b7-af42-35d181cf5bb8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 486,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2bd09321-8fb1-4879-bfc7-00fff758d503",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "497c6fc1-4595-43ac-97ea-059c6b5aea4f",
              "parentUUID": "2bd09321-8fb1-4879-bfc7-00fff758d503",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "1fdeebe2-f6bd-4eab-b94c-e8635e5bbdd3",
              "parentUUID": "2bd09321-8fb1-4879-bfc7-00fff758d503",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "0d4830b5-52f7-44e5-98d9-27f2118c2ba8",
              "parentUUID": "2bd09321-8fb1-4879-bfc7-00fff758d503",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "d99e64fb-f104-4964-8f19-06e247fd45f5",
              "parentUUID": "2bd09321-8fb1-4879-bfc7-00fff758d503",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "66283c0f-e06d-4171-8999-6ce3bda995bc",
              "parentUUID": "2bd09321-8fb1-4879-bfc7-00fff758d503",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "a8ce875e-b3fd-4234-94b5-32f5de8cf01a",
              "parentUUID": "2bd09321-8fb1-4879-bfc7-00fff758d503",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "a6a4447a-36af-4cec-b229-4c10afe64bd1",
              "parentUUID": "2bd09321-8fb1-4879-bfc7-00fff758d503",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "497c6fc1-4595-43ac-97ea-059c6b5aea4f",
            "1fdeebe2-f6bd-4eab-b94c-e8635e5bbdd3",
            "0d4830b5-52f7-44e5-98d9-27f2118c2ba8",
            "d99e64fb-f104-4964-8f19-06e247fd45f5",
            "66283c0f-e06d-4171-8999-6ce3bda995bc",
            "a8ce875e-b3fd-4234-94b5-32f5de8cf01a",
            "a6a4447a-36af-4cec-b229-4c10afe64bd1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d88240fb-da0a-4599-8eb2-b021a88c7799",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "bd23754f-a636-45cf-8380-fe1b80e7eca5",
              "parentUUID": "d88240fb-da0a-4599-8eb2-b021a88c7799",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "78e503ca-b238-4ba0-bdc3-f7554eebb91a",
              "parentUUID": "d88240fb-da0a-4599-8eb2-b021a88c7799",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd23754f-a636-45cf-8380-fe1b80e7eca5",
            "78e503ca-b238-4ba0-bdc3-f7554eebb91a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 285,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "466d2dc0-99b9-42f7-adff-c3acd6726b3d",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "82596409-b339-4f3c-bfc2-d1c3da114627",
              "parentUUID": "466d2dc0-99b9-42f7-adff-c3acd6726b3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "46beaa51-61ef-41dc-a8db-ceb09c2fe30c",
              "parentUUID": "466d2dc0-99b9-42f7-adff-c3acd6726b3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "f019e6b0-ca67-49b5-87a1-68c95a771e10",
              "parentUUID": "466d2dc0-99b9-42f7-adff-c3acd6726b3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "c142c722-a126-4e90-bad7-2e153643795d",
              "parentUUID": "466d2dc0-99b9-42f7-adff-c3acd6726b3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82596409-b339-4f3c-bfc2-d1c3da114627",
            "46beaa51-61ef-41dc-a8db-ceb09c2fe30c",
            "f019e6b0-ca67-49b5-87a1-68c95a771e10",
            "c142c722-a126-4e90-bad7-2e153643795d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 447,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "71a6bec1-b2c4-420e-9ec2-d90a0c2bfbb0",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "44bc7171-4856-42d4-b7ea-9e70283aa2b2",
              "parentUUID": "71a6bec1-b2c4-420e-9ec2-d90a0c2bfbb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "1cdea30a-0f7d-4ad3-b247-1bdf067a9170",
              "parentUUID": "71a6bec1-b2c4-420e-9ec2-d90a0c2bfbb0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44bc7171-4856-42d4-b7ea-9e70283aa2b2",
            "1cdea30a-0f7d-4ad3-b247-1bdf067a9170"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 530,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2f802bde-286b-469c-9d59-0ef573f050c7",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "c2ea4fdc-0cb8-49bf-b633-97cadb696e37",
              "parentUUID": "2f802bde-286b-469c-9d59-0ef573f050c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "728e48e8-a69f-44fe-9284-654872e0bbe8",
              "parentUUID": "2f802bde-286b-469c-9d59-0ef573f050c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2ea4fdc-0cb8-49bf-b633-97cadb696e37",
            "728e48e8-a69f-44fe-9284-654872e0bbe8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 191,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "594ecc4a-b676-41c5-8a7e-2acc80ebc200",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "86d91e5a-9c34-4751-8de2-36657605c1c9",
              "parentUUID": "594ecc4a-b676-41c5-8a7e-2acc80ebc200",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "3d4ea442-2c99-4113-b740-f16e656a5820",
              "parentUUID": "594ecc4a-b676-41c5-8a7e-2acc80ebc200",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86d91e5a-9c34-4751-8de2-36657605c1c9",
            "3d4ea442-2c99-4113-b740-f16e656a5820"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9076,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4ffc6b78-b2a4-44f7-93c4-6ef103b8d0c3",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "75603479-6950-4e50-8506-c285faa5103e",
              "parentUUID": "4ffc6b78-b2a4-44f7-93c4-6ef103b8d0c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8582,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "ab1f4d04-ed94-48fe-9cbf-5a403ed26350",
              "parentUUID": "4ffc6b78-b2a4-44f7-93c4-6ef103b8d0c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "68c67184-dd15-462d-9c02-56e9e14f5c9e",
              "parentUUID": "4ffc6b78-b2a4-44f7-93c4-6ef103b8d0c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "75603479-6950-4e50-8506-c285faa5103e",
            "ab1f4d04-ed94-48fe-9cbf-5a403ed26350",
            "68c67184-dd15-462d-9c02-56e9e14f5c9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12258,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fce83223-c7d3-4b28-b901-3109eecdec9c",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "384c3120-03ce-40c3-aac3-302e1ff1bfa6",
              "parentUUID": "fce83223-c7d3-4b28-b901-3109eecdec9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "680cdceb-e4fc-4484-9efc-4e34b3735d57",
              "parentUUID": "fce83223-c7d3-4b28-b901-3109eecdec9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "d37979af-b6da-4b74-b560-8972e2a6860d",
              "parentUUID": "fce83223-c7d3-4b28-b901-3109eecdec9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "0444af7b-18c3-4481-b374-c0660efffad1",
              "parentUUID": "fce83223-c7d3-4b28-b901-3109eecdec9c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "384c3120-03ce-40c3-aac3-302e1ff1bfa6",
            "680cdceb-e4fc-4484-9efc-4e34b3735d57",
            "d37979af-b6da-4b74-b560-8972e2a6860d",
            "0444af7b-18c3-4481-b374-c0660efffad1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2734,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a53d862f-3421-44fc-a8a8-337b2a590462",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37997/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37997/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37997/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37997/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37997/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "44be593a-8cf5-4be7-a6d6-6bdf90180c44",
              "parentUUID": "a53d862f-3421-44fc-a8a8-337b2a590462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4281,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37997/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37997/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37997/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37997/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37997/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "72311dde-42e9-43a0-b409-5f04367528e6",
              "parentUUID": "a53d862f-3421-44fc-a8a8-337b2a590462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4238,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37997/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37997/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37997/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37997/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37997/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "44abe4b4-6122-475b-a7bb-92687494414d",
              "parentUUID": "a53d862f-3421-44fc-a8a8-337b2a590462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4240,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37997/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37997/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37997/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37997/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37997/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1889f266-d59f-49f9-afb4-52f41804503f",
              "parentUUID": "a53d862f-3421-44fc-a8a8-337b2a590462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4244,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37997/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37997/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37997/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37997/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37997/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "87a9bbf1-fdfe-4f84-bf40-cf9279f714f7",
              "parentUUID": "a53d862f-3421-44fc-a8a8-337b2a590462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4250,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37997/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37997/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37997/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37997/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37997/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8562df4f-60bc-428a-ad47-e892d2470967",
              "parentUUID": "a53d862f-3421-44fc-a8a8-337b2a590462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4258,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37997/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37997/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37997/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37997/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37997/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2d1194f7-d92d-49f5-ae6d-3a21904d1ef8",
              "parentUUID": "a53d862f-3421-44fc-a8a8-337b2a590462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4269,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37997/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37997/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37997/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37997/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37997/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bc65ebe9-26af-449d-9cf4-eade779a57d5",
              "parentUUID": "a53d862f-3421-44fc-a8a8-337b2a590462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4260,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37997/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37997/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37997/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37997/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37997/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ca0a5069-34f2-41a9-9fa9-4291fbf7ff30",
              "parentUUID": "a53d862f-3421-44fc-a8a8-337b2a590462",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "44be593a-8cf5-4be7-a6d6-6bdf90180c44",
            "72311dde-42e9-43a0-b409-5f04367528e6",
            "44abe4b4-6122-475b-a7bb-92687494414d",
            "1889f266-d59f-49f9-afb4-52f41804503f",
            "87a9bbf1-fdfe-4f84-bf40-cf9279f714f7",
            "8562df4f-60bc-428a-ad47-e892d2470967",
            "2d1194f7-d92d-49f5-ae6d-3a21904d1ef8",
            "bc65ebe9-26af-449d-9cf4-eade779a57d5",
            "ca0a5069-34f2-41a9-9fa9-4291fbf7ff30"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38319,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3d6027d1-c008-4763-ab0b-8f6598455b38",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4280,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37997/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37997/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37997/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37997/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37997/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "809c008c-7596-4252-8ba9-1da9dbaf9bdb",
              "parentUUID": "3d6027d1-c008-4763-ab0b-8f6598455b38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4244,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37997/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37997/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37997/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37997/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37997/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5999eb26-d68f-42ea-8ba8-17afe8423611",
              "parentUUID": "3d6027d1-c008-4763-ab0b-8f6598455b38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4237,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37997/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37997/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37997/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37997/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37997/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37997/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6e8309d7-c56a-4417-a07e-6a1aa13fdce4",
              "parentUUID": "3d6027d1-c008-4763-ab0b-8f6598455b38",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "809c008c-7596-4252-8ba9-1da9dbaf9bdb",
            "5999eb26-d68f-42ea-8ba8-17afe8423611",
            "6e8309d7-c56a-4417-a07e-6a1aa13fdce4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12761,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "754b48f4-e35a-4fa8-b060-87e07129f9e7",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 374,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:37997/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:37997/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:37997/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:37997/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:37997/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:37997/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:37997/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "246ec698-3ed4-4eaf-8e28-2d9ff1707d12",
              "parentUUID": "754b48f4-e35a-4fa8-b060-87e07129f9e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 333,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:37997/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:37997/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:37997/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:37997/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:37997/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:37997/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:37997/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37997/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37997/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:37997/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37997/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37997/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "9b7fc7b9-6f44-48c5-96de-a6526882dcee",
              "parentUUID": "754b48f4-e35a-4fa8-b060-87e07129f9e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "246ec698-3ed4-4eaf-8e28-2d9ff1707d12",
            "9b7fc7b9-6f44-48c5-96de-a6526882dcee"
          ],
          "pending": [],
          "skipped": [],
          "duration": 707,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}