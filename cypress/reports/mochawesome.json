{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-14T02:04:53.861Z",
    "end": "2021-08-14T02:06:44.453Z",
    "duration": 110592,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ae884a58-4eeb-43c8-bf2b-d9afc2de1600",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5f21ee64-5a55-4fd2-88c4-956739d54509",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 908,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "b81474bf-0d45-4ca3-a55b-5502ab67400c",
              "parentUUID": "5f21ee64-5a55-4fd2-88c4-956739d54509",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b81474bf-0d45-4ca3-a55b-5502ab67400c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 908,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b221ad9f-0ea4-41b3-b1dc-85d82b4e0cab",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 313,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "0c3e7b2a-28a5-4bbb-ba8e-a6d261cd2745",
              "parentUUID": "b221ad9f-0ea4-41b3-b1dc-85d82b4e0cab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 420,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "e0436a9e-1eff-4ea9-8680-f1da509230ce",
              "parentUUID": "b221ad9f-0ea4-41b3-b1dc-85d82b4e0cab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "0ac52337-f58f-4b83-a6d6-293f7dfb992a",
              "parentUUID": "b221ad9f-0ea4-41b3-b1dc-85d82b4e0cab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "c6ff86f9-63d6-4ef3-ae67-adc45575475c",
              "parentUUID": "b221ad9f-0ea4-41b3-b1dc-85d82b4e0cab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "756d37f9-1198-4498-9913-7e388914035a",
              "parentUUID": "b221ad9f-0ea4-41b3-b1dc-85d82b4e0cab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "5d371ca6-46b1-43a2-81bc-bc95a2e5816a",
              "parentUUID": "b221ad9f-0ea4-41b3-b1dc-85d82b4e0cab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "d3d64feb-7fb4-4e7e-9730-2bce4a6ef368",
              "parentUUID": "b221ad9f-0ea4-41b3-b1dc-85d82b4e0cab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c3e7b2a-28a5-4bbb-ba8e-a6d261cd2745",
            "e0436a9e-1eff-4ea9-8680-f1da509230ce",
            "0ac52337-f58f-4b83-a6d6-293f7dfb992a",
            "c6ff86f9-63d6-4ef3-ae67-adc45575475c",
            "756d37f9-1198-4498-9913-7e388914035a",
            "5d371ca6-46b1-43a2-81bc-bc95a2e5816a",
            "d3d64feb-7fb4-4e7e-9730-2bce4a6ef368"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2324,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ce27f1e1-6065-46c4-b42e-65ff80737793",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "77d885cc-2a59-4dfb-8d52-c4e2dc38ce7f",
              "parentUUID": "ce27f1e1-6065-46c4-b42e-65ff80737793",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 727,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "42d57435-8a23-4190-8a83-453780fe37cd",
              "parentUUID": "ce27f1e1-6065-46c4-b42e-65ff80737793",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77d885cc-2a59-4dfb-8d52-c4e2dc38ce7f",
            "42d57435-8a23-4190-8a83-453780fe37cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1083,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ae6ead81-2459-47d5-a710-f8bd113af8c9",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "048a08e9-fd4a-4b91-a47e-9e5fab635641",
              "parentUUID": "ae6ead81-2459-47d5-a710-f8bd113af8c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "1cd63193-27e5-4554-97f8-9962a01ef5ad",
              "parentUUID": "ae6ead81-2459-47d5-a710-f8bd113af8c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 673,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "e9b9c1b2-200f-4365-b171-f37fac7ea15f",
              "parentUUID": "ae6ead81-2459-47d5-a710-f8bd113af8c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "e62a60ad-c327-4065-a6ae-fae08648b4cf",
              "parentUUID": "ae6ead81-2459-47d5-a710-f8bd113af8c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "048a08e9-fd4a-4b91-a47e-9e5fab635641",
            "1cd63193-27e5-4554-97f8-9962a01ef5ad",
            "e9b9c1b2-200f-4365-b171-f37fac7ea15f",
            "e62a60ad-c327-4065-a6ae-fae08648b4cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1576,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4d362d6b-75f4-4893-a9f3-57c3d5ab5b78",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 1499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "b0a30ac9-1ce4-4744-8bae-ca4113726d82",
              "parentUUID": "4d362d6b-75f4-4893-a9f3-57c3d5ab5b78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1450,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "5c56d66d-bda2-41f7-8af6-fec8e41060f2",
              "parentUUID": "4d362d6b-75f4-4893-a9f3-57c3d5ab5b78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0a30ac9-1ce4-4744-8bae-ca4113726d82",
            "5c56d66d-bda2-41f7-8af6-fec8e41060f2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2949,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b0a99eee-6cc2-46b5-854c-bbc60504c2bd",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "05488a70-cec8-42a5-a38a-6838942d4f57",
              "parentUUID": "b0a99eee-6cc2-46b5-854c-bbc60504c2bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "43fa44fe-bcf8-4655-848d-a994f1e2c02d",
              "parentUUID": "b0a99eee-6cc2-46b5-854c-bbc60504c2bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05488a70-cec8-42a5-a38a-6838942d4f57",
            "43fa44fe-bcf8-4655-848d-a994f1e2c02d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 714,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "894b719e-968c-43b5-a3cf-27d3bc280667",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 958,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "a7c1d2ad-4514-4f9f-b1d3-be4bfead04e0",
              "parentUUID": "894b719e-968c-43b5-a3cf-27d3bc280667",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9908,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "1e4dcde8-52aa-4048-a17b-5b8f53c94b40",
              "parentUUID": "894b719e-968c-43b5-a3cf-27d3bc280667",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7c1d2ad-4514-4f9f-b1d3-be4bfead04e0",
            "1e4dcde8-52aa-4048-a17b-5b8f53c94b40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10866,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e725e5c7-3b8c-41d9-a484-affed0987194",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2912,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "f1675112-3353-4604-9041-e1543f193ed6",
              "parentUUID": "e725e5c7-3b8c-41d9-a484-affed0987194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 10869,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "13d158a7-3704-4723-9c21-c4c94fd502e4",
              "parentUUID": "e725e5c7-3b8c-41d9-a484-affed0987194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 3340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "151b561f-12ff-412e-90f7-12b2ebef7e35",
              "parentUUID": "e725e5c7-3b8c-41d9-a484-affed0987194",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1675112-3353-4604-9041-e1543f193ed6",
            "13d158a7-3704-4723-9c21-c4c94fd502e4",
            "151b561f-12ff-412e-90f7-12b2ebef7e35"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17121,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "25f396e9-5ffa-4270-a2e4-6dcd902f9ae3",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "4355d89f-86b1-4e3a-b378-4f847c253d37",
              "parentUUID": "25f396e9-5ffa-4270-a2e4-6dcd902f9ae3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "e25668a5-5b8b-4b26-992d-cbf1d200304a",
              "parentUUID": "25f396e9-5ffa-4270-a2e4-6dcd902f9ae3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "37c37359-0a85-4e6a-a0ad-ff52cf3a9b2d",
              "parentUUID": "25f396e9-5ffa-4270-a2e4-6dcd902f9ae3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3057,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "51690c66-867c-4c75-b9c4-5b587a5054d5",
              "parentUUID": "25f396e9-5ffa-4270-a2e4-6dcd902f9ae3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4355d89f-86b1-4e3a-b378-4f847c253d37",
            "e25668a5-5b8b-4b26-992d-cbf1d200304a",
            "37c37359-0a85-4e6a-a0ad-ff52cf3a9b2d",
            "51690c66-867c-4c75-b9c4-5b587a5054d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4108,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "77952874-df36-4aa4-87a7-f18293b2fd28",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5183,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:52650/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:52650/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:52650/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:52650/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:52650/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b93f2c98-41b4-4b82-bc8a-cece6ac8eba1",
              "parentUUID": "77952874-df36-4aa4-87a7-f18293b2fd28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5202,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:52650/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:52650/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:52650/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:52650/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:52650/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "af108e59-1bc3-4ce0-9222-23ba6192fd53",
              "parentUUID": "77952874-df36-4aa4-87a7-f18293b2fd28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 5102,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:52650/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:52650/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:52650/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:52650/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:52650/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a00379c5-b3bf-4507-847e-f3dcdc111ae4",
              "parentUUID": "77952874-df36-4aa4-87a7-f18293b2fd28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 5142,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:52650/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:52650/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:52650/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:52650/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:52650/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9f54b291-9e01-43ca-889c-cbfa399e4830",
              "parentUUID": "77952874-df36-4aa4-87a7-f18293b2fd28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5611,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:52650/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:52650/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:52650/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:52650/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:52650/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b7fcf7a4-8de7-40b8-b82a-0114c00a72f5",
              "parentUUID": "77952874-df36-4aa4-87a7-f18293b2fd28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 5232,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:52650/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:52650/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:52650/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:52650/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:52650/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1a8cd0a9-1c0f-4b06-aa84-291076fad568",
              "parentUUID": "77952874-df36-4aa4-87a7-f18293b2fd28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 5346,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:52650/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:52650/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:52650/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:52650/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:52650/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d8c6e1ad-3f60-41ef-b5f9-cbea81a4cbfd",
              "parentUUID": "77952874-df36-4aa4-87a7-f18293b2fd28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 5225,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:52650/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:52650/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:52650/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:52650/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:52650/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4f771885-7c62-41c1-a11b-05727d2b54ca",
              "parentUUID": "77952874-df36-4aa4-87a7-f18293b2fd28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5274,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:52650/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:52650/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:52650/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:52650/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:52650/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f5e6bfd9-0aee-4254-8380-094b9abe6e8b",
              "parentUUID": "77952874-df36-4aa4-87a7-f18293b2fd28",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b93f2c98-41b4-4b82-bc8a-cece6ac8eba1",
            "af108e59-1bc3-4ce0-9222-23ba6192fd53",
            "a00379c5-b3bf-4507-847e-f3dcdc111ae4",
            "9f54b291-9e01-43ca-889c-cbfa399e4830",
            "b7fcf7a4-8de7-40b8-b82a-0114c00a72f5",
            "1a8cd0a9-1c0f-4b06-aa84-291076fad568",
            "d8c6e1ad-3f60-41ef-b5f9-cbea81a4cbfd",
            "4f771885-7c62-41c1-a11b-05727d2b54ca",
            "f5e6bfd9-0aee-4254-8380-094b9abe6e8b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 47317,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "27fab771-3d6d-45a1-a1ae-2d3a195d0e3a",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5017,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:52650/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:52650/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:52650/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:52650/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:52650/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a8342148-ff8e-490f-a8d1-8223d811872b",
              "parentUUID": "27fab771-3d6d-45a1-a1ae-2d3a195d0e3a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 5234,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:52650/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:52650/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:52650/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:52650/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:52650/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0b11a137-7a89-4024-8471-0cbc5b0cc653",
              "parentUUID": "27fab771-3d6d-45a1-a1ae-2d3a195d0e3a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4982,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:52650/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:52650/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:52650/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:52650/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:52650/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:52650/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7fe2d278-92e8-4c28-8688-dbf53105029c",
              "parentUUID": "27fab771-3d6d-45a1-a1ae-2d3a195d0e3a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a8342148-ff8e-490f-a8d1-8223d811872b",
            "0b11a137-7a89-4024-8471-0cbc5b0cc653",
            "7fe2d278-92e8-4c28-8688-dbf53105029c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15233,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "45d956ab-d494-4c24-bd1a-0cc7fae45ccc",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1830,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:52650/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:52650/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:52650/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:52650/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:52650/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:52650/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:52650/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0dafc3ab-c1af-4731-90ee-9840e181bdc7",
              "parentUUID": "45d956ab-d494-4c24-bd1a-0cc7fae45ccc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1371,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:52650/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:52650/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:52650/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:52650/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:52650/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:52650/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:52650/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:52650/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:52650/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:52650/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:52650/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:52650/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "29677a8b-49b5-4f51-9486-dbdd3e2ef6d3",
              "parentUUID": "45d956ab-d494-4c24-bd1a-0cc7fae45ccc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0dafc3ab-c1af-4731-90ee-9840e181bdc7",
            "29677a8b-49b5-4f51-9486-dbdd3e2ef6d3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3201,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}