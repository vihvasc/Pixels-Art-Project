{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-16T20:56:38.196Z",
    "end": "2021-08-16T20:57:56.174Z",
    "duration": 77978,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d9a14bf7-c143-430c-9a3e-042be01b6a2a",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4987317a-327d-4a1a-aefb-3ad864bc9a54",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "02666541-42e0-4888-9314-f6fb6e774861",
              "parentUUID": "4987317a-327d-4a1a-aefb-3ad864bc9a54",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02666541-42e0-4888-9314-f6fb6e774861"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 132,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b723c42d-e0f1-4f12-9b79-1e07c5502ec4",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "94c83553-76e7-472e-a0d7-686949cba6c0",
              "parentUUID": "b723c42d-e0f1-4f12-9b79-1e07c5502ec4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "1378e4f8-3c18-4d24-bab6-143ab6c5901b",
              "parentUUID": "b723c42d-e0f1-4f12-9b79-1e07c5502ec4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "3f75bd92-b71c-446d-b03a-918e9b92f97d",
              "parentUUID": "b723c42d-e0f1-4f12-9b79-1e07c5502ec4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "63486d79-bdb5-45fc-a2e3-79e5286ac6eb",
              "parentUUID": "b723c42d-e0f1-4f12-9b79-1e07c5502ec4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "2cf1447d-9f96-4395-acf0-2be74ced1300",
              "parentUUID": "b723c42d-e0f1-4f12-9b79-1e07c5502ec4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "feecc08f-690a-41b4-8304-dac6fa47e715",
              "parentUUID": "b723c42d-e0f1-4f12-9b79-1e07c5502ec4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "8accba15-cc5f-4675-a5f3-0120065232b5",
              "parentUUID": "b723c42d-e0f1-4f12-9b79-1e07c5502ec4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94c83553-76e7-472e-a0d7-686949cba6c0",
            "1378e4f8-3c18-4d24-bab6-143ab6c5901b",
            "3f75bd92-b71c-446d-b03a-918e9b92f97d",
            "63486d79-bdb5-45fc-a2e3-79e5286ac6eb",
            "2cf1447d-9f96-4395-acf0-2be74ced1300",
            "feecc08f-690a-41b4-8304-dac6fa47e715",
            "8accba15-cc5f-4675-a5f3-0120065232b5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 632,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c026bd9d-913b-402d-98ec-ddf189dcf99e",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d89aee2c-6a24-4934-905d-72d006fc73d9",
              "parentUUID": "c026bd9d-913b-402d-98ec-ddf189dcf99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "efc43213-b003-4839-985e-830aad600d59",
              "parentUUID": "c026bd9d-913b-402d-98ec-ddf189dcf99e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d89aee2c-6a24-4934-905d-72d006fc73d9",
            "efc43213-b003-4839-985e-830aad600d59"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 249,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2ddae791-b4af-46ab-a956-a942c608b5d2",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "18df69bc-6dc4-4156-bcd4-4ffb404700db",
              "parentUUID": "2ddae791-b4af-46ab-a956-a942c608b5d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "56ca5cbb-ba4d-4b9b-8cce-1392185d8d3c",
              "parentUUID": "2ddae791-b4af-46ab-a956-a942c608b5d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c60f26e9-2579-40cb-b0a5-0d5ada7f87ac",
              "parentUUID": "2ddae791-b4af-46ab-a956-a942c608b5d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "38a47992-5ea0-4c26-b614-b31ff24c53c1",
              "parentUUID": "2ddae791-b4af-46ab-a956-a942c608b5d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18df69bc-6dc4-4156-bcd4-4ffb404700db",
            "56ca5cbb-ba4d-4b9b-8cce-1392185d8d3c",
            "c60f26e9-2579-40cb-b0a5-0d5ada7f87ac",
            "38a47992-5ea0-4c26-b614-b31ff24c53c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 324,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1b947340-7392-42e7-90f4-3f5adc48726b",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "e8d44fea-d874-41a3-b847-a3be226eff35",
              "parentUUID": "1b947340-7392-42e7-90f4-3f5adc48726b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "cbcbceea-bc4f-4a9e-b55f-1996029405e0",
              "parentUUID": "1b947340-7392-42e7-90f4-3f5adc48726b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e8d44fea-d874-41a3-b847-a3be226eff35",
            "cbcbceea-bc4f-4a9e-b55f-1996029405e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 400,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "28a83633-d0f6-4975-8664-67187165adf9",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9fe8dab5-c636-4326-9b57-8990cefc9748",
              "parentUUID": "28a83633-d0f6-4975-8664-67187165adf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "44428788-85a0-4150-baa3-a9196c5964e7",
              "parentUUID": "28a83633-d0f6-4975-8664-67187165adf9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9fe8dab5-c636-4326-9b57-8990cefc9748",
            "44428788-85a0-4150-baa3-a9196c5964e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 144,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2bade760-596c-4e0d-951d-b6100cd88bed",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "12ab98f4-6189-4ca0-9ae4-542f4d77a879",
              "parentUUID": "2bade760-596c-4e0d-951d-b6100cd88bed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8805,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "2a3d6828-b2b5-4d5a-a9d8-40a9303a3fe7",
              "parentUUID": "2bade760-596c-4e0d-951d-b6100cd88bed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12ab98f4-6189-4ca0-9ae4-542f4d77a879",
            "2a3d6828-b2b5-4d5a-a9d8-40a9303a3fe7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9242,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "15628ea1-1e35-4f76-bd5e-ca7ffcdbd431",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "32d0446d-d177-4de4-bff7-e8eb27e94b3c",
              "parentUUID": "15628ea1-1e35-4f76-bd5e-ca7ffcdbd431",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8738,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "440e388a-371b-438c-b1e5-7657f9f3132e",
              "parentUUID": "15628ea1-1e35-4f76-bd5e-ca7ffcdbd431",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "641f87c6-3c6b-4efd-a4df-17bbcdb82078",
              "parentUUID": "15628ea1-1e35-4f76-bd5e-ca7ffcdbd431",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32d0446d-d177-4de4-bff7-e8eb27e94b3c",
            "440e388a-371b-438c-b1e5-7657f9f3132e",
            "641f87c6-3c6b-4efd-a4df-17bbcdb82078"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "67e1d423-5155-46cf-823c-0d224eae1162",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "5b9e975c-5b18-4af9-a76b-bb5f8ffc3332",
              "parentUUID": "67e1d423-5155-46cf-823c-0d224eae1162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "157c1821-52a1-4bd9-9312-5fe0019ae2a8",
              "parentUUID": "67e1d423-5155-46cf-823c-0d224eae1162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 51,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "d53c122b-d1ee-46d4-87ef-4a69fca93123",
              "parentUUID": "67e1d423-5155-46cf-823c-0d224eae1162",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2345,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "fa310581-f7e4-4df0-bcf0-198e5c8390d0",
              "parentUUID": "67e1d423-5155-46cf-823c-0d224eae1162",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b9e975c-5b18-4af9-a76b-bb5f8ffc3332",
            "157c1821-52a1-4bd9-9312-5fe0019ae2a8",
            "d53c122b-d1ee-46d4-87ef-4a69fca93123",
            "fa310581-f7e4-4df0-bcf0-198e5c8390d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2563,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1a2b0859-fbb3-4bec-b436-15d57b6f7da2",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4216,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37955/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37955/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37955/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37955/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37955/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "553ef16e-c249-4722-a5e3-5faa9fd8bb7d",
              "parentUUID": "1a2b0859-fbb3-4bec-b436-15d57b6f7da2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4228,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37955/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37955/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37955/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37955/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37955/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bd2e597f-23c1-4ae4-88d8-f851a3b8221c",
              "parentUUID": "1a2b0859-fbb3-4bec-b436-15d57b6f7da2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4190,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37955/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37955/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37955/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37955/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37955/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "72abd129-11a1-4bf5-a5e9-d8a14e233f7a",
              "parentUUID": "1a2b0859-fbb3-4bec-b436-15d57b6f7da2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4215,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37955/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37955/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37955/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37955/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37955/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "77d35d72-c811-4d01-89c9-f5c708594299",
              "parentUUID": "1a2b0859-fbb3-4bec-b436-15d57b6f7da2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4225,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37955/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37955/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37955/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37955/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37955/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ac708b10-b370-4ec0-9817-82d01d3a07e1",
              "parentUUID": "1a2b0859-fbb3-4bec-b436-15d57b6f7da2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4232,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37955/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37955/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37955/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37955/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37955/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4a08bd6d-820e-412c-888f-ab074eaf9023",
              "parentUUID": "1a2b0859-fbb3-4bec-b436-15d57b6f7da2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37955/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37955/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37955/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37955/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37955/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "727ff2c0-055b-43aa-8f02-f44619e46727",
              "parentUUID": "1a2b0859-fbb3-4bec-b436-15d57b6f7da2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4242,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37955/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37955/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37955/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37955/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37955/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6796a171-77ba-4e52-85b1-7067ec944420",
              "parentUUID": "1a2b0859-fbb3-4bec-b436-15d57b6f7da2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4264,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37955/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37955/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37955/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37955/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37955/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cb7d102a-75b5-4725-b076-df08c45c5610",
              "parentUUID": "1a2b0859-fbb3-4bec-b436-15d57b6f7da2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "553ef16e-c249-4722-a5e3-5faa9fd8bb7d",
            "bd2e597f-23c1-4ae4-88d8-f851a3b8221c",
            "72abd129-11a1-4bf5-a5e9-d8a14e233f7a",
            "77d35d72-c811-4d01-89c9-f5c708594299",
            "ac708b10-b370-4ec0-9817-82d01d3a07e1",
            "4a08bd6d-820e-412c-888f-ab074eaf9023",
            "727ff2c0-055b-43aa-8f02-f44619e46727",
            "6796a171-77ba-4e52-85b1-7067ec944420",
            "cb7d102a-75b5-4725-b076-df08c45c5610"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38101,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "88d105a6-b77c-4ad7-9f3b-09570b9324c8",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4250,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37955/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37955/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37955/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37955/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37955/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1e166d1f-c459-4a10-a982-27e356df8a21",
              "parentUUID": "88d105a6-b77c-4ad7-9f3b-09570b9324c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4221,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37955/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37955/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37955/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37955/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37955/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "032a59e1-e552-4be8-9262-92d49395cfc4",
              "parentUUID": "88d105a6-b77c-4ad7-9f3b-09570b9324c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4220,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37955/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37955/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37955/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37955/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37955/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37955/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c9bcc461-b3e9-4305-b2bb-218d73d6f239",
              "parentUUID": "88d105a6-b77c-4ad7-9f3b-09570b9324c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1e166d1f-c459-4a10-a982-27e356df8a21",
            "032a59e1-e552-4be8-9262-92d49395cfc4",
            "c9bcc461-b3e9-4305-b2bb-218d73d6f239"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12691,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "94ac8c4c-0b06-42ce-a642-1caa73511cf7",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 357,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:37955/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:37955/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:37955/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:37955/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:37955/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:37955/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:37955/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "5aeec926-829f-4efd-ac1a-84046e1762eb",
              "parentUUID": "94ac8c4c-0b06-42ce-a642-1caa73511cf7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 264,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:37955/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:37955/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:37955/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:37955/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:37955/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:37955/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:37955/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37955/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37955/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:37955/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37955/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37955/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "acb3f01d-0082-4527-9ea2-526b5d1f2da2",
              "parentUUID": "94ac8c4c-0b06-42ce-a642-1caa73511cf7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5aeec926-829f-4efd-ac1a-84046e1762eb",
            "acb3f01d-0082-4527-9ea2-526b5d1f2da2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 621,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}