{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-14T22:08:45.711Z",
    "end": "2021-08-14T22:10:13.067Z",
    "duration": 87356,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "28f0d239-0479-447e-a019-ee3aa07444ad",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b78f05df-73eb-4c15-b66f-d6e2f4d7a4e6",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "f9932660-736b-496c-8b88-35d642ddd545",
              "parentUUID": "b78f05df-73eb-4c15-b66f-d6e2f4d7a4e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9932660-736b-496c-8b88-35d642ddd545"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 361,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cc0d45a6-78f0-450c-a05c-acd88829fbfb",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "513995c7-9bc7-4cd7-9bea-eee1c49ad0ab",
              "parentUUID": "cc0d45a6-78f0-450c-a05c-acd88829fbfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "a3dceeea-6c17-4207-9204-15f28bc36778",
              "parentUUID": "cc0d45a6-78f0-450c-a05c-acd88829fbfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "a0b73c7b-eca0-4be7-ac3c-4355b2783876",
              "parentUUID": "cc0d45a6-78f0-450c-a05c-acd88829fbfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "ef030cc0-6db4-4e65-8e94-f29d947d9921",
              "parentUUID": "cc0d45a6-78f0-450c-a05c-acd88829fbfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "b177baae-ea3c-4167-9482-5e65cc48344d",
              "parentUUID": "cc0d45a6-78f0-450c-a05c-acd88829fbfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "0e62ec79-4eb2-4045-90ed-98c7f81c77ee",
              "parentUUID": "cc0d45a6-78f0-450c-a05c-acd88829fbfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "3574c44c-2273-4263-a0b1-51d4e5c60859",
              "parentUUID": "cc0d45a6-78f0-450c-a05c-acd88829fbfb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "513995c7-9bc7-4cd7-9bea-eee1c49ad0ab",
            "a3dceeea-6c17-4207-9204-15f28bc36778",
            "a0b73c7b-eca0-4be7-ac3c-4355b2783876",
            "ef030cc0-6db4-4e65-8e94-f29d947d9921",
            "b177baae-ea3c-4167-9482-5e65cc48344d",
            "0e62ec79-4eb2-4045-90ed-98c7f81c77ee",
            "3574c44c-2273-4263-a0b1-51d4e5c60859"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1338,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "24d60ad6-563c-42af-b99f-21fe6fe26ddb",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5f55d7e4-fea9-4de3-aeda-d575e23e8025",
              "parentUUID": "24d60ad6-563c-42af-b99f-21fe6fe26ddb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "ea14fcad-9c01-43c3-9d36-f7f2cc957170",
              "parentUUID": "24d60ad6-563c-42af-b99f-21fe6fe26ddb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f55d7e4-fea9-4de3-aeda-d575e23e8025",
            "ea14fcad-9c01-43c3-9d36-f7f2cc957170"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 427,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7b0f40a7-bed5-43cd-a9e1-242e8c98f748",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "90f8b78e-c147-4884-997b-aa326281361a",
              "parentUUID": "7b0f40a7-bed5-43cd-a9e1-242e8c98f748",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "2caaf860-b0cb-43c8-bc82-066701e03899",
              "parentUUID": "7b0f40a7-bed5-43cd-a9e1-242e8c98f748",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "35e3a609-b4b3-4abc-b28b-b2707964548e",
              "parentUUID": "7b0f40a7-bed5-43cd-a9e1-242e8c98f748",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "8b535e45-2618-473f-9937-53525d222193",
              "parentUUID": "7b0f40a7-bed5-43cd-a9e1-242e8c98f748",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90f8b78e-c147-4884-997b-aa326281361a",
            "2caaf860-b0cb-43c8-bc82-066701e03899",
            "35e3a609-b4b3-4abc-b28b-b2707964548e",
            "8b535e45-2618-473f-9937-53525d222193"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 778,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a0ea7482-92cc-4441-97eb-b19984341f7b",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 432,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "7c7ffb45-8fe3-4522-a408-a45a1108c2eb",
              "parentUUID": "a0ea7482-92cc-4441-97eb-b19984341f7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "870a12d0-6803-445d-819a-cd4f8fb55c4e",
              "parentUUID": "a0ea7482-92cc-4441-97eb-b19984341f7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c7ffb45-8fe3-4522-a408-a45a1108c2eb",
            "870a12d0-6803-445d-819a-cd4f8fb55c4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 807,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7b1f1687-c5d5-4cdb-9090-16a35b1dfea9",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "0f57708d-fda0-4be2-9ae5-d6cdb1680aff",
              "parentUUID": "7b1f1687-c5d5-4cdb-9090-16a35b1dfea9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "e74a634d-8290-4f8e-8d89-8bf066f1911b",
              "parentUUID": "7b1f1687-c5d5-4cdb-9090-16a35b1dfea9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f57708d-fda0-4be2-9ae5-d6cdb1680aff",
            "e74a634d-8290-4f8e-8d89-8bf066f1911b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 270,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4a7741ab-cb7f-4982-a30c-b0f748349518",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 590,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "6a2ff766-5d96-4246-826e-971943571fd3",
              "parentUUID": "4a7741ab-cb7f-4982-a30c-b0f748349518",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "ca248a33-d8d6-4a30-b0d9-76d86a0d4ddc",
              "parentUUID": "4a7741ab-cb7f-4982-a30c-b0f748349518",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a2ff766-5d96-4246-826e-971943571fd3",
            "ca248a33-d8d6-4a30-b0d9-76d86a0d4ddc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9998,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "44887744-2f5d-4ccb-abfc-00647db421fb",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "0c5ac123-7434-4528-a509-faad2d4ddd95",
              "parentUUID": "44887744-2f5d-4ccb-abfc-00647db421fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "3ca791a3-0913-4ef9-80f8-7f68fb8c577d",
              "parentUUID": "44887744-2f5d-4ccb-abfc-00647db421fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "2c32131c-2ea9-49cc-b724-1eb45ad7f365",
              "parentUUID": "44887744-2f5d-4ccb-abfc-00647db421fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c5ac123-7434-4528-a509-faad2d4ddd95",
            "3ca791a3-0913-4ef9-80f8-7f68fb8c577d",
            "2c32131c-2ea9-49cc-b724-1eb45ad7f365"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13685,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "40afb813-b8c4-4574-af2a-c6f84269638a",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "e3dd42ba-b273-491c-bd71-963adcf687ef",
              "parentUUID": "40afb813-b8c4-4574-af2a-c6f84269638a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "86641f63-0cad-4191-a0f3-e3cfb44a904b",
              "parentUUID": "40afb813-b8c4-4574-af2a-c6f84269638a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "9e41a6aa-feee-4873-95de-7d82a58d7a14",
              "parentUUID": "40afb813-b8c4-4574-af2a-c6f84269638a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2628,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "0516ab38-0287-4f56-8e01-32e0d5077158",
              "parentUUID": "40afb813-b8c4-4574-af2a-c6f84269638a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3dd42ba-b273-491c-bd71-963adcf687ef",
            "86641f63-0cad-4191-a0f3-e3cfb44a904b",
            "9e41a6aa-feee-4873-95de-7d82a58d7a14",
            "0516ab38-0287-4f56-8e01-32e0d5077158"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3168,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5d817e6c-13cd-44f8-86cd-b48d32d86128",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4489,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45941/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45941/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45941/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45941/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45941/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c97aef10-0ba2-49b2-b6e5-c3d7708326c0",
              "parentUUID": "5d817e6c-13cd-44f8-86cd-b48d32d86128",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4537,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45941/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45941/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45941/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45941/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45941/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fec196fd-b934-4c18-9c66-234a19d2343c",
              "parentUUID": "5d817e6c-13cd-44f8-86cd-b48d32d86128",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4493,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45941/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45941/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45941/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45941/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45941/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "02e8a76a-3192-46a8-93a5-003d68b7d1ff",
              "parentUUID": "5d817e6c-13cd-44f8-86cd-b48d32d86128",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4432,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45941/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45941/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45941/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45941/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45941/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1c407dfa-8aa9-4109-afd4-cb5e99ef9692",
              "parentUUID": "5d817e6c-13cd-44f8-86cd-b48d32d86128",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4460,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45941/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45941/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45941/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45941/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45941/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "49a50f5c-e4e2-4c6c-b57c-bf1d46c5b8a8",
              "parentUUID": "5d817e6c-13cd-44f8-86cd-b48d32d86128",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4481,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45941/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45941/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45941/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45941/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45941/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "60797d1c-f311-4b7b-a328-e73f8005a16b",
              "parentUUID": "5d817e6c-13cd-44f8-86cd-b48d32d86128",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4423,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45941/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45941/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45941/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45941/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45941/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2071bdac-da37-4406-b880-6b4d4d04a15e",
              "parentUUID": "5d817e6c-13cd-44f8-86cd-b48d32d86128",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4511,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45941/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45941/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45941/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45941/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45941/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2048664d-474b-408d-983f-64a6fd799473",
              "parentUUID": "5d817e6c-13cd-44f8-86cd-b48d32d86128",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45941/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45941/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45941/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45941/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45941/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4f01b169-5ec4-4dfa-a59c-5fc9735def69",
              "parentUUID": "5d817e6c-13cd-44f8-86cd-b48d32d86128",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c97aef10-0ba2-49b2-b6e5-c3d7708326c0",
            "fec196fd-b934-4c18-9c66-234a19d2343c",
            "02e8a76a-3192-46a8-93a5-003d68b7d1ff",
            "1c407dfa-8aa9-4109-afd4-cb5e99ef9692",
            "49a50f5c-e4e2-4c6c-b57c-bf1d46c5b8a8",
            "60797d1c-f311-4b7b-a328-e73f8005a16b",
            "2071bdac-da37-4406-b880-6b4d4d04a15e",
            "2048664d-474b-408d-983f-64a6fd799473",
            "4f01b169-5ec4-4dfa-a59c-5fc9735def69"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40298,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "12735b4b-68b0-4568-96e8-0719e3682076",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4519,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45941/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45941/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45941/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45941/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45941/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3f254fa0-c9be-498a-9fc5-8a8aa751a729",
              "parentUUID": "12735b4b-68b0-4568-96e8-0719e3682076",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4525,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45941/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45941/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45941/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45941/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45941/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "96cd8ff1-31ac-4e80-9155-bd735d16ae37",
              "parentUUID": "12735b4b-68b0-4568-96e8-0719e3682076",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4517,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45941/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45941/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45941/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45941/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45941/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45941/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7722bf6d-6f50-46aa-aa46-7c46f0843663",
              "parentUUID": "12735b4b-68b0-4568-96e8-0719e3682076",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3f254fa0-c9be-498a-9fc5-8a8aa751a729",
            "96cd8ff1-31ac-4e80-9155-bd735d16ae37",
            "7722bf6d-6f50-46aa-aa46-7c46f0843663"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13561,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "31a15597-6eec-400d-89f2-6fad85549a93",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 646,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45941/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45941/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45941/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45941/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45941/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45941/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45941/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "8e0dfef3-8894-4e44-8de2-1b01ba374669",
              "parentUUID": "31a15597-6eec-400d-89f2-6fad85549a93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 488,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45941/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45941/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45941/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45941/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45941/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45941/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45941/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45941/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45941/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45941/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45941/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45941/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "a2d319e1-eb91-4ec6-80cd-e854529b6da3",
              "parentUUID": "31a15597-6eec-400d-89f2-6fad85549a93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8e0dfef3-8894-4e44-8de2-1b01ba374669",
            "a2d319e1-eb91-4ec6-80cd-e854529b6da3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1134,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}