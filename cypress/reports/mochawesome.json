{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-08-14T02:27:49.865Z",
    "end": "2021-08-14T02:29:19.816Z",
    "duration": 89951,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "693eca43-6175-44b2-88e0-04498507150c",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "96e1fdf9-5628-4425-b801-92e4ba4191dc",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 360,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "dc83ce1d-5670-40b9-aa2b-aa2800356549",
              "parentUUID": "96e1fdf9-5628-4425-b801-92e4ba4191dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc83ce1d-5670-40b9-aa2b-aa2800356549"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 360,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d3f7d04d-dcc7-4590-81b0-360c78ae368f",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "a719c781-1708-44cf-b7e2-1b0cabae7214",
              "parentUUID": "d3f7d04d-dcc7-4590-81b0-360c78ae368f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 394,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "ac882420-087a-4c19-bf9a-4eaf8893bb80",
              "parentUUID": "d3f7d04d-dcc7-4590-81b0-360c78ae368f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "55ff0e18-8036-47ae-800f-56ae4dc14ec7",
              "parentUUID": "d3f7d04d-dcc7-4590-81b0-360c78ae368f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "1c2e0cc6-1386-475c-8c08-351b304ceacf",
              "parentUUID": "d3f7d04d-dcc7-4590-81b0-360c78ae368f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "646398fa-8b2f-4ff5-b5cc-f7689f9d3cd3",
              "parentUUID": "d3f7d04d-dcc7-4590-81b0-360c78ae368f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "966c69f2-ba35-450d-9865-6e27b236c53f",
              "parentUUID": "d3f7d04d-dcc7-4590-81b0-360c78ae368f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "be3b5776-f2d4-4879-b951-29123f4b926e",
              "parentUUID": "d3f7d04d-dcc7-4590-81b0-360c78ae368f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a719c781-1708-44cf-b7e2-1b0cabae7214",
            "ac882420-087a-4c19-bf9a-4eaf8893bb80",
            "55ff0e18-8036-47ae-800f-56ae4dc14ec7",
            "1c2e0cc6-1386-475c-8c08-351b304ceacf",
            "646398fa-8b2f-4ff5-b5cc-f7689f9d3cd3",
            "966c69f2-ba35-450d-9865-6e27b236c53f",
            "be3b5776-f2d4-4879-b951-29123f4b926e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1779,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cd7d6b76-8caf-4b83-b0b4-4c656504c629",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "a402e102-aa76-4a34-bbd0-9155bc81b605",
              "parentUUID": "cd7d6b76-8caf-4b83-b0b4-4c656504c629",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "00172bc9-8756-465a-ae92-22fee97a6778",
              "parentUUID": "cd7d6b76-8caf-4b83-b0b4-4c656504c629",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a402e102-aa76-4a34-bbd0-9155bc81b605",
            "00172bc9-8756-465a-ae92-22fee97a6778"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 563,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "44ebbffd-0660-449a-b169-6deba6b3f75d",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "f5776e7d-82db-4df8-a6bd-646fa49b957c",
              "parentUUID": "44ebbffd-0660-449a-b169-6deba6b3f75d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "ad73ded6-efe9-4381-a631-58d56dd803aa",
              "parentUUID": "44ebbffd-0660-449a-b169-6deba6b3f75d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "8aa3c746-4b69-4667-af1e-4a8ecd263832",
              "parentUUID": "44ebbffd-0660-449a-b169-6deba6b3f75d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "91859230-1abb-4239-9fcf-18329f0e5948",
              "parentUUID": "44ebbffd-0660-449a-b169-6deba6b3f75d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5776e7d-82db-4df8-a6bd-646fa49b957c",
            "ad73ded6-efe9-4381-a631-58d56dd803aa",
            "8aa3c746-4b69-4667-af1e-4a8ecd263832",
            "91859230-1abb-4239-9fcf-18329f0e5948"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 947,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "684ff336-82ae-4f77-94ec-24226c3d76df",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "bfe295ee-35d3-4a7c-a744-a5a7ea926f2e",
              "parentUUID": "684ff336-82ae-4f77-94ec-24226c3d76df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 541,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "28d8cbda-0bf1-4110-a623-1f324ed35998",
              "parentUUID": "684ff336-82ae-4f77-94ec-24226c3d76df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bfe295ee-35d3-4a7c-a744-a5a7ea926f2e",
            "28d8cbda-0bf1-4110-a623-1f324ed35998"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1016,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aa77b397-b7ab-421a-bc39-3c7fcd38a49a",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "3987737e-f3e1-4d54-97db-8717f734c22e",
              "parentUUID": "aa77b397-b7ab-421a-bc39-3c7fcd38a49a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "3b545ed9-3522-41c6-9fdf-de118ca29e5a",
              "parentUUID": "aa77b397-b7ab-421a-bc39-3c7fcd38a49a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3987737e-f3e1-4d54-97db-8717f734c22e",
            "3b545ed9-3522-41c6-9fdf-de118ca29e5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 394,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7daffe69-28fd-43a6-b56f-8c9284678c14",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 607,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "ed8c3ac1-6d0b-484d-8834-e1dd4ce4c939",
              "parentUUID": "7daffe69-28fd-43a6-b56f-8c9284678c14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "a562befe-3a2f-4f0e-9c93-6d465019a3ed",
              "parentUUID": "7daffe69-28fd-43a6-b56f-8c9284678c14",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ed8c3ac1-6d0b-484d-8834-e1dd4ce4c939",
            "a562befe-3a2f-4f0e-9c93-6d465019a3ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9831,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "07a6628e-8996-4247-9d42-fe4ec1c28955",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "2a292fc6-75d2-458e-b706-1d2bc1f6be13",
              "parentUUID": "07a6628e-8996-4247-9d42-fe4ec1c28955",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "cf23bb3a-0e10-4cc8-bb05-cfc6ba189802",
              "parentUUID": "07a6628e-8996-4247-9d42-fe4ec1c28955",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1900,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "ed345081-9b44-4a73-aeaf-e49cccdef961",
              "parentUUID": "07a6628e-8996-4247-9d42-fe4ec1c28955",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a292fc6-75d2-458e-b706-1d2bc1f6be13",
            "cf23bb3a-0e10-4cc8-bb05-cfc6ba189802",
            "ed345081-9b44-4a73-aeaf-e49cccdef961"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "79bda0b8-dcb3-4b63-aa93-2e4d079f884a",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "95ebfb21-9c6e-468a-8fd3-19766b700c54",
              "parentUUID": "79bda0b8-dcb3-4b63-aa93-2e4d079f884a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "9b8e9d47-79be-4f1e-9034-fa9d8a2c413c",
              "parentUUID": "79bda0b8-dcb3-4b63-aa93-2e4d079f884a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "421f6aa0-f82f-4866-9e9e-6ef1139e50e2",
              "parentUUID": "79bda0b8-dcb3-4b63-aa93-2e4d079f884a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "168a4f71-c0fc-4a3a-ad5d-4d9eec8a3c28",
              "parentUUID": "79bda0b8-dcb3-4b63-aa93-2e4d079f884a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95ebfb21-9c6e-468a-8fd3-19766b700c54",
            "9b8e9d47-79be-4f1e-9034-fa9d8a2c413c",
            "421f6aa0-f82f-4866-9e9e-6ef1139e50e2",
            "168a4f71-c0fc-4a3a-ad5d-4d9eec8a3c28"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3315,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "06781822-ad14-4db7-88b0-a615e66a2172",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4601,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37461/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37461/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37461/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37461/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37461/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37461/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37461/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37461/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37461/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "004a0712-317c-4b31-8ce6-7c3f4d15a9bd",
              "parentUUID": "06781822-ad14-4db7-88b0-a615e66a2172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4690,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37461/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37461/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37461/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37461/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37461/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37461/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37461/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37461/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37461/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7bdaf030-b88d-48cc-b8e1-7fc528907ae5",
              "parentUUID": "06781822-ad14-4db7-88b0-a615e66a2172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4591,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37461/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37461/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37461/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37461/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37461/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37461/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37461/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37461/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37461/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bb6e0827-a4ba-470d-8e75-89d4fbbd0c80",
              "parentUUID": "06781822-ad14-4db7-88b0-a615e66a2172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4568,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37461/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37461/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37461/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37461/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37461/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37461/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37461/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37461/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37461/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "090fc060-0a99-46e3-ba45-e4259d4832e9",
              "parentUUID": "06781822-ad14-4db7-88b0-a615e66a2172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4611,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37461/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37461/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37461/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37461/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37461/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37461/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37461/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37461/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37461/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "77c882d4-4f37-46e4-bb0c-c7063a605f9c",
              "parentUUID": "06781822-ad14-4db7-88b0-a615e66a2172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4591,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37461/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37461/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37461/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37461/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37461/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37461/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37461/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37461/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37461/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6f82a674-b8b5-4bb1-ba7a-235c57ef00e5",
              "parentUUID": "06781822-ad14-4db7-88b0-a615e66a2172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4501,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37461/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37461/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37461/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37461/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37461/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37461/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37461/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37461/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37461/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "212fd62f-954f-4fcb-a062-8ec86fd65198",
              "parentUUID": "06781822-ad14-4db7-88b0-a615e66a2172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4642,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37461/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37461/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37461/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37461/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37461/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37461/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37461/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37461/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37461/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4842cac5-6b31-4fdd-8b0e-ab02b05eeb2e",
              "parentUUID": "06781822-ad14-4db7-88b0-a615e66a2172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4619,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37461/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37461/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37461/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37461/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37461/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37461/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37461/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37461/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37461/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "eff9090f-42d6-464c-b614-54c1b9c5824d",
              "parentUUID": "06781822-ad14-4db7-88b0-a615e66a2172",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "004a0712-317c-4b31-8ce6-7c3f4d15a9bd",
            "7bdaf030-b88d-48cc-b8e1-7fc528907ae5",
            "bb6e0827-a4ba-470d-8e75-89d4fbbd0c80",
            "090fc060-0a99-46e3-ba45-e4259d4832e9",
            "77c882d4-4f37-46e4-bb0c-c7063a605f9c",
            "6f82a674-b8b5-4bb1-ba7a-235c57ef00e5",
            "212fd62f-954f-4fcb-a062-8ec86fd65198",
            "4842cac5-6b31-4fdd-8b0e-ab02b05eeb2e",
            "eff9090f-42d6-464c-b614-54c1b9c5824d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41414,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d50d1a46-c141-48fd-9542-b54f96bb1d1f",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4624,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37461/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37461/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37461/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37461/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37461/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37461/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37461/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37461/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37461/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "487ccbbd-3c45-417a-9c8e-08faee1af015",
              "parentUUID": "d50d1a46-c141-48fd-9542-b54f96bb1d1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4667,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37461/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37461/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37461/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37461/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37461/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37461/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37461/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37461/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37461/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "50362462-e86e-4e3a-a384-30b0d1532aa9",
              "parentUUID": "d50d1a46-c141-48fd-9542-b54f96bb1d1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4629,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37461/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37461/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37461/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37461/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37461/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37461/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37461/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37461/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37461/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37461/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37461/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "67f88111-19b0-49c6-b105-902414f669bc",
              "parentUUID": "d50d1a46-c141-48fd-9542-b54f96bb1d1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "487ccbbd-3c45-417a-9c8e-08faee1af015",
            "50362462-e86e-4e3a-a384-30b0d1532aa9",
            "67f88111-19b0-49c6-b105-902414f669bc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13920,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dfe6d158-6560-49fb-a592-08b68180c920",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 895,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "5ba948c9-0b3f-4fb0-a3f2-629f64874946",
              "parentUUID": "dfe6d158-6560-49fb-a592-08b68180c920",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "6a5b242f-727f-43a8-ae0b-6d22d6908ba0",
              "parentUUID": "dfe6d158-6560-49fb-a592-08b68180c920",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ba948c9-0b3f-4fb0-a3f2-629f64874946",
            "6a5b242f-727f-43a8-ae0b-6d22d6908ba0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1587,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}