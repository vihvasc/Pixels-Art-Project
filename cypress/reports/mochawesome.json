{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-08-15T22:10:49.260Z",
    "end": "2021-08-15T22:12:20.785Z",
    "duration": 91525,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "be5a1adc-f978-49a2-a4ff-cc08b120b494",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4ff8c1e9-9f2c-4ec1-b2a4-3b682b4fa601",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "93360b12-deb8-4bde-872b-a5bd82625e96",
              "parentUUID": "4ff8c1e9-9f2c-4ec1-b2a4-3b682b4fa601",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93360b12-deb8-4bde-872b-a5bd82625e96"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 306,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e40ce3fd-9e03-44f3-b7be-651d3e9e967b",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "c69b8ebf-22f9-4ca0-a0ee-b44a15dc97b1",
              "parentUUID": "e40ce3fd-9e03-44f3-b7be-651d3e9e967b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 303,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "27213c2f-8252-4f6b-8b61-ba208584c1f5",
              "parentUUID": "e40ce3fd-9e03-44f3-b7be-651d3e9e967b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "d6ef4813-52ef-40f3-9d2f-673e9d820546",
              "parentUUID": "e40ce3fd-9e03-44f3-b7be-651d3e9e967b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "ce688785-fbd6-4d94-99ec-0fcba4d63443",
              "parentUUID": "e40ce3fd-9e03-44f3-b7be-651d3e9e967b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "21a4cae3-1c3d-455e-acaf-d4a8e397c865",
              "parentUUID": "e40ce3fd-9e03-44f3-b7be-651d3e9e967b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "582e0fec-a003-4b72-9991-41b2247cad46",
              "parentUUID": "e40ce3fd-9e03-44f3-b7be-651d3e9e967b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "14291448-3023-4efc-8960-afe7572ca98a",
              "parentUUID": "e40ce3fd-9e03-44f3-b7be-651d3e9e967b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c69b8ebf-22f9-4ca0-a0ee-b44a15dc97b1",
            "27213c2f-8252-4f6b-8b61-ba208584c1f5",
            "d6ef4813-52ef-40f3-9d2f-673e9d820546",
            "ce688785-fbd6-4d94-99ec-0fcba4d63443",
            "21a4cae3-1c3d-455e-acaf-d4a8e397c865",
            "582e0fec-a003-4b72-9991-41b2247cad46",
            "14291448-3023-4efc-8960-afe7572ca98a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1656,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "340c56f3-32c0-4a1c-bec4-b7579d498131",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "75158d73-0132-44c3-8ab2-1a6c3a3f7a37",
              "parentUUID": "340c56f3-32c0-4a1c-bec4-b7579d498131",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "67e96605-f7da-44d2-9d40-2c8f2335245b",
              "parentUUID": "340c56f3-32c0-4a1c-bec4-b7579d498131",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "75158d73-0132-44c3-8ab2-1a6c3a3f7a37",
            "67e96605-f7da-44d2-9d40-2c8f2335245b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 519,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c154c8d2-e195-4a49-ac4e-1680cd57dd77",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "d6fc8c92-52e3-4dae-a509-9da5797e8b80",
              "parentUUID": "c154c8d2-e195-4a49-ac4e-1680cd57dd77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "7f6c9068-5496-451f-bd81-aacf48c7af75",
              "parentUUID": "c154c8d2-e195-4a49-ac4e-1680cd57dd77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "34a63e77-ece5-4eeb-92d1-a2a94d4d8b83",
              "parentUUID": "c154c8d2-e195-4a49-ac4e-1680cd57dd77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "30d5cec9-2e72-4d64-94bf-a7df00c9d224",
              "parentUUID": "c154c8d2-e195-4a49-ac4e-1680cd57dd77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6fc8c92-52e3-4dae-a509-9da5797e8b80",
            "7f6c9068-5496-451f-bd81-aacf48c7af75",
            "34a63e77-ece5-4eeb-92d1-a2a94d4d8b83",
            "30d5cec9-2e72-4d64-94bf-a7df00c9d224"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 778,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8fce66e6-6c3f-4db8-b3bd-cd67409b706d",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 398,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "9dc54aed-f5bd-4023-82d8-58a6c25a067e",
              "parentUUID": "8fce66e6-6c3f-4db8-b3bd-cd67409b706d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "520f0bcf-ca6f-41fa-a76e-c13c0ab9afdb",
              "parentUUID": "8fce66e6-6c3f-4db8-b3bd-cd67409b706d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9dc54aed-f5bd-4023-82d8-58a6c25a067e",
            "520f0bcf-ca6f-41fa-a76e-c13c0ab9afdb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 781,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "444ddc62-7922-43c1-88e0-b6fadc483ff6",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5a426280-b2aa-43bc-9251-87a84fece27a",
              "parentUUID": "444ddc62-7922-43c1-88e0-b6fadc483ff6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "ef77f0e5-6148-4b27-b68c-974e03c65b9b",
              "parentUUID": "444ddc62-7922-43c1-88e0-b6fadc483ff6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a426280-b2aa-43bc-9251-87a84fece27a",
            "ef77f0e5-6148-4b27-b68c-974e03c65b9b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 445,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "574b92c8-8e1c-4213-8a04-81aa91fdf0ca",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 566,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "b21d0bcf-9b99-44cc-9985-40eb03cec6b7",
              "parentUUID": "574b92c8-8e1c-4213-8a04-81aa91fdf0ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "d3d4b30d-4dc2-4af1-b3f8-641a48904522",
              "parentUUID": "574b92c8-8e1c-4213-8a04-81aa91fdf0ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b21d0bcf-9b99-44cc-9985-40eb03cec6b7",
            "d3d4b30d-4dc2-4af1-b3f8-641a48904522"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10736,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f4539f18-0131-40a8-95ff-7f05f92db142",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2651,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "2e0de883-0814-4b0d-82ae-bb32409eace3",
              "parentUUID": "f4539f18-0131-40a8-95ff-7f05f92db142",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 10099,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "c05f1992-8606-4fe2-aae6-2570ac990f4c",
              "parentUUID": "f4539f18-0131-40a8-95ff-7f05f92db142",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1998,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "fa8518cf-9cc3-4c9e-90d5-9ea603ec59be",
              "parentUUID": "f4539f18-0131-40a8-95ff-7f05f92db142",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2e0de883-0814-4b0d-82ae-bb32409eace3",
            "c05f1992-8606-4fe2-aae6-2570ac990f4c",
            "fa8518cf-9cc3-4c9e-90d5-9ea603ec59be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14748,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "70a4a076-6513-415f-9b78-d7f706e2f988",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "cc0e2cc2-c8ce-4146-a505-ad31f5b03faa",
              "parentUUID": "70a4a076-6513-415f-9b78-d7f706e2f988",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "3b9ffa60-4b75-4a61-858a-6d884eb72c1a",
              "parentUUID": "70a4a076-6513-415f-9b78-d7f706e2f988",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "2218feda-b1db-4f0c-acbf-d922c4569cc6",
              "parentUUID": "70a4a076-6513-415f-9b78-d7f706e2f988",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2918,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "dc16e5ce-f875-4084-8953-a084dae40222",
              "parentUUID": "70a4a076-6513-415f-9b78-d7f706e2f988",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc0e2cc2-c8ce-4146-a505-ad31f5b03faa",
            "3b9ffa60-4b75-4a61-858a-6d884eb72c1a",
            "2218feda-b1db-4f0c-acbf-d922c4569cc6",
            "dc16e5ce-f875-4084-8953-a084dae40222"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3478,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a51c48a7-099f-48d2-a7fc-ffb464bf641f",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4541,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37301/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37301/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37301/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37301/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37301/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37301/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37301/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37301/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37301/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "956ed865-cd57-43a0-b153-0d8fae0193e1",
              "parentUUID": "a51c48a7-099f-48d2-a7fc-ffb464bf641f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4521,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37301/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37301/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37301/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37301/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37301/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37301/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37301/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37301/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37301/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3a3948be-16c0-4f18-af40-e03cc9fdd3ea",
              "parentUUID": "a51c48a7-099f-48d2-a7fc-ffb464bf641f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4542,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37301/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37301/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37301/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37301/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37301/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37301/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37301/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37301/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37301/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "296ab2ed-9152-43c7-bfcb-bcda96a30762",
              "parentUUID": "a51c48a7-099f-48d2-a7fc-ffb464bf641f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4552,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37301/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37301/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37301/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37301/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37301/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37301/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37301/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37301/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37301/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7f5c886c-8550-4909-8b33-68db29c3d6d4",
              "parentUUID": "a51c48a7-099f-48d2-a7fc-ffb464bf641f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4660,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37301/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37301/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37301/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37301/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37301/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37301/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37301/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37301/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37301/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b8d1aca1-552d-4e94-a9a8-0dbd98ba3bf2",
              "parentUUID": "a51c48a7-099f-48d2-a7fc-ffb464bf641f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4567,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37301/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37301/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37301/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37301/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37301/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37301/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37301/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37301/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37301/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ecccc07d-fce0-4016-94cd-66f6af7184da",
              "parentUUID": "a51c48a7-099f-48d2-a7fc-ffb464bf641f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4789,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37301/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37301/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37301/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37301/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37301/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37301/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37301/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37301/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37301/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f6890296-b129-434b-b112-599caf9fcd94",
              "parentUUID": "a51c48a7-099f-48d2-a7fc-ffb464bf641f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4654,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37301/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37301/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37301/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37301/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37301/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37301/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37301/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37301/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37301/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b6a31dfa-c578-4357-b2c2-86cb727e3315",
              "parentUUID": "a51c48a7-099f-48d2-a7fc-ffb464bf641f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4499,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37301/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37301/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37301/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37301/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37301/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37301/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37301/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37301/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37301/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2eb8ee35-d14e-4ecf-88a2-95223a25ca33",
              "parentUUID": "a51c48a7-099f-48d2-a7fc-ffb464bf641f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "956ed865-cd57-43a0-b153-0d8fae0193e1",
            "3a3948be-16c0-4f18-af40-e03cc9fdd3ea",
            "296ab2ed-9152-43c7-bfcb-bcda96a30762",
            "7f5c886c-8550-4909-8b33-68db29c3d6d4",
            "b8d1aca1-552d-4e94-a9a8-0dbd98ba3bf2",
            "ecccc07d-fce0-4016-94cd-66f6af7184da",
            "f6890296-b129-434b-b112-599caf9fcd94",
            "b6a31dfa-c578-4357-b2c2-86cb727e3315",
            "2eb8ee35-d14e-4ecf-88a2-95223a25ca33"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41325,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eb7f40bf-b24f-41b4-bdfd-a31febad99d5",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4610,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37301/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37301/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37301/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37301/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37301/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37301/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37301/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37301/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37301/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "77c1aa9f-8e28-4bd3-8b32-22a847410825",
              "parentUUID": "eb7f40bf-b24f-41b4-bdfd-a31febad99d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4660,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37301/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37301/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37301/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37301/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37301/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37301/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37301/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37301/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37301/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ce778066-287c-4844-b56d-4d6300da613a",
              "parentUUID": "eb7f40bf-b24f-41b4-bdfd-a31febad99d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4533,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:37301/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:37301/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:37301/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:37301/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:37301/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:37301/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:37301/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:37301/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:37301/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:37301/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:37301/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "72838951-6ff0-433c-a2d7-535756fa204a",
              "parentUUID": "eb7f40bf-b24f-41b4-bdfd-a31febad99d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "77c1aa9f-8e28-4bd3-8b32-22a847410825",
            "ce778066-287c-4844-b56d-4d6300da613a",
            "72838951-6ff0-433c-a2d7-535756fa204a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13803,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f4531e92-5a95-481d-bc6b-fca85d2ac656",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1015,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "92974ca0-9efb-4780-bedc-86b5f505be64",
              "parentUUID": "f4531e92-5a95-481d-bc6b-fca85d2ac656",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 640,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "8d4b0dd2-6b8f-47dc-a14d-ef9aee0f7580",
              "parentUUID": "f4531e92-5a95-481d-bc6b-fca85d2ac656",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92974ca0-9efb-4780-bedc-86b5f505be64",
            "8d4b0dd2-6b8f-47dc-a14d-ef9aee0f7580"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1655,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}