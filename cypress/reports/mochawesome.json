{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-20T03:00:16.439Z",
    "end": "2021-08-20T03:01:34.187Z",
    "duration": 77748,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cf826f35-aa8b-42da-a25f-bb4de53742f1",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "46d8c5bd-7a64-4135-b47d-faeb41df70c6",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 467,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "d7b34a04-da0c-4fbb-9754-5d519c1a7983",
              "parentUUID": "46d8c5bd-7a64-4135-b47d-faeb41df70c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7b34a04-da0c-4fbb-9754-5d519c1a7983"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 467,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "90fbadd7-e0b9-46e0-8dfa-f20f5482a4df",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "bf1cac2d-153b-410c-9c33-406cae80f26c",
              "parentUUID": "90fbadd7-e0b9-46e0-8dfa-f20f5482a4df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "e809596c-d246-419a-8252-ecddbe86aad8",
              "parentUUID": "90fbadd7-e0b9-46e0-8dfa-f20f5482a4df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "2d4de37a-5998-4dff-b44f-779bff8e664d",
              "parentUUID": "90fbadd7-e0b9-46e0-8dfa-f20f5482a4df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "d692f71a-fe9a-43b1-94a1-b68b5d52a487",
              "parentUUID": "90fbadd7-e0b9-46e0-8dfa-f20f5482a4df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "8e6e0fb1-c8c4-4e22-85a7-b43b2b4d16db",
              "parentUUID": "90fbadd7-e0b9-46e0-8dfa-f20f5482a4df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "fb507a93-b383-4d16-b0e0-d99724c5d093",
              "parentUUID": "90fbadd7-e0b9-46e0-8dfa-f20f5482a4df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "a92ee52d-0dff-442c-a02b-28996dc4a630",
              "parentUUID": "90fbadd7-e0b9-46e0-8dfa-f20f5482a4df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf1cac2d-153b-410c-9c33-406cae80f26c",
            "e809596c-d246-419a-8252-ecddbe86aad8",
            "2d4de37a-5998-4dff-b44f-779bff8e664d",
            "d692f71a-fe9a-43b1-94a1-b68b5d52a487",
            "8e6e0fb1-c8c4-4e22-85a7-b43b2b4d16db",
            "fb507a93-b383-4d16-b0e0-d99724c5d093",
            "a92ee52d-0dff-442c-a02b-28996dc4a630"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 684,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9247f4ee-19b4-4e59-829a-add0a059bec5",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "03c3e2d4-8963-44ea-9e2e-660fe938a55d",
              "parentUUID": "9247f4ee-19b4-4e59-829a-add0a059bec5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "ef338604-f0b2-4867-839d-c46db2247fb7",
              "parentUUID": "9247f4ee-19b4-4e59-829a-add0a059bec5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03c3e2d4-8963-44ea-9e2e-660fe938a55d",
            "ef338604-f0b2-4867-839d-c46db2247fb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 210,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e86131c0-8662-4590-ac23-46248754d7ee",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 61,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "1cefc79c-ff15-4ebc-bf74-a572a5ac4802",
              "parentUUID": "e86131c0-8662-4590-ac23-46248754d7ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "c19dc219-4cb9-4290-8510-e270303e88f9",
              "parentUUID": "e86131c0-8662-4590-ac23-46248754d7ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "09577048-5852-4956-b10a-4262088467b1",
              "parentUUID": "e86131c0-8662-4590-ac23-46248754d7ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "b1b3f782-1368-4bdd-a285-11d70888cdd1",
              "parentUUID": "e86131c0-8662-4590-ac23-46248754d7ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1cefc79c-ff15-4ebc-bf74-a572a5ac4802",
            "c19dc219-4cb9-4290-8510-e270303e88f9",
            "09577048-5852-4956-b10a-4262088467b1",
            "b1b3f782-1368-4bdd-a285-11d70888cdd1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 352,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4a40caee-a61c-4a0b-8d5d-16283292f075",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "7b2c3471-e9f4-45d8-bd9e-78b9eab67411",
              "parentUUID": "4a40caee-a61c-4a0b-8d5d-16283292f075",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "ba7da697-0fbe-4d81-bc07-bb3c3f8ff645",
              "parentUUID": "4a40caee-a61c-4a0b-8d5d-16283292f075",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b2c3471-e9f4-45d8-bd9e-78b9eab67411",
            "ba7da697-0fbe-4d81-bc07-bb3c3f8ff645"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 415,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8378b91-d583-4ef8-9407-d99dc2d9945c",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f580950d-4ce7-4775-a006-71af2467e3ed",
              "parentUUID": "e8378b91-d583-4ef8-9407-d99dc2d9945c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "233057ef-6436-41e2-85f9-af622a591694",
              "parentUUID": "e8378b91-d583-4ef8-9407-d99dc2d9945c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f580950d-4ce7-4775-a006-71af2467e3ed",
            "233057ef-6436-41e2-85f9-af622a591694"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 134,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ebc019b-6c63-45c3-ad2f-a57bfaaf17be",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 427,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "6ae09c71-68c0-4d7d-a436-191928abe523",
              "parentUUID": "0ebc019b-6c63-45c3-ad2f-a57bfaaf17be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8568,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "87b2cd97-32d8-4b5a-9193-c6601b909742",
              "parentUUID": "0ebc019b-6c63-45c3-ad2f-a57bfaaf17be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ae09c71-68c0-4d7d-a436-191928abe523",
            "87b2cd97-32d8-4b5a-9193-c6601b909742"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8995,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d83375fb-9a01-4c9f-ba7c-fcfcdbdfdf66",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "1029393d-00ef-4522-881d-f22c66bf1d98",
              "parentUUID": "d83375fb-9a01-4c9f-ba7c-fcfcdbdfdf66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "9d4115cc-0373-47f3-8cdc-f3dc4c6dfe18",
              "parentUUID": "d83375fb-9a01-4c9f-ba7c-fcfcdbdfdf66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "db03ebcd-6988-48a8-b5ef-d30253e553e7",
              "parentUUID": "d83375fb-9a01-4c9f-ba7c-fcfcdbdfdf66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1029393d-00ef-4522-881d-f22c66bf1d98",
            "9d4115cc-0373-47f3-8cdc-f3dc4c6dfe18",
            "db03ebcd-6988-48a8-b5ef-d30253e553e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11834,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "610c8f4d-85de-407c-bc0d-cb800c1f6396",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "37cd620a-4857-41f0-9089-4d959bd24dd2",
              "parentUUID": "610c8f4d-85de-407c-bc0d-cb800c1f6396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "3364852a-7077-4a8f-83a2-ab94bf1c682f",
              "parentUUID": "610c8f4d-85de-407c-bc0d-cb800c1f6396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 53,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "e7451233-f5fe-465b-af2d-0823e17685f3",
              "parentUUID": "610c8f4d-85de-407c-bc0d-cb800c1f6396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "e4b9aa01-dce8-46c7-b1c4-7e76d0cbb49b",
              "parentUUID": "610c8f4d-85de-407c-bc0d-cb800c1f6396",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37cd620a-4857-41f0-9089-4d959bd24dd2",
            "3364852a-7077-4a8f-83a2-ab94bf1c682f",
            "e7451233-f5fe-465b-af2d-0823e17685f3",
            "e4b9aa01-dce8-46c7-b1c4-7e76d0cbb49b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2566,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "52d27a27-ec56-43a4-acbb-3a867beea62a",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4307,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34197/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34197/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34197/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34197/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34197/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "63a8c2c2-ef20-4cc1-910a-31e62c98229b",
              "parentUUID": "52d27a27-ec56-43a4-acbb-3a867beea62a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4269,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34197/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34197/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34197/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34197/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34197/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "427f5787-d69d-4625-ab8d-a8569d1aab3e",
              "parentUUID": "52d27a27-ec56-43a4-acbb-3a867beea62a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4276,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34197/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34197/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34197/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34197/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34197/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dd1c1e21-a2dd-4412-8112-583cf2f5a27f",
              "parentUUID": "52d27a27-ec56-43a4-acbb-3a867beea62a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4249,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34197/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34197/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34197/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34197/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34197/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "01eada0b-9113-4f39-aa69-e0395ec47c8b",
              "parentUUID": "52d27a27-ec56-43a4-acbb-3a867beea62a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4196,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34197/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34197/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34197/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34197/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34197/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "04c557c3-030f-4e5e-a43d-317a0889c948",
              "parentUUID": "52d27a27-ec56-43a4-acbb-3a867beea62a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4225,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34197/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34197/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34197/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34197/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34197/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ac1ac432-2fd7-4c8b-8b79-078e31df1693",
              "parentUUID": "52d27a27-ec56-43a4-acbb-3a867beea62a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4219,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34197/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34197/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34197/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34197/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34197/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "47a21fc1-1bd8-4023-8b30-39de0d921890",
              "parentUUID": "52d27a27-ec56-43a4-acbb-3a867beea62a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4206,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34197/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34197/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34197/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34197/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34197/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3600ccaa-e1b8-4e6e-bb14-3628e2c51c71",
              "parentUUID": "52d27a27-ec56-43a4-acbb-3a867beea62a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4204,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34197/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34197/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34197/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34197/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34197/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1477ed57-ca3a-4245-b264-7bf7cd931e15",
              "parentUUID": "52d27a27-ec56-43a4-acbb-3a867beea62a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "63a8c2c2-ef20-4cc1-910a-31e62c98229b",
            "427f5787-d69d-4625-ab8d-a8569d1aab3e",
            "dd1c1e21-a2dd-4412-8112-583cf2f5a27f",
            "01eada0b-9113-4f39-aa69-e0395ec47c8b",
            "04c557c3-030f-4e5e-a43d-317a0889c948",
            "ac1ac432-2fd7-4c8b-8b79-078e31df1693",
            "47a21fc1-1bd8-4023-8b30-39de0d921890",
            "3600ccaa-e1b8-4e6e-bb14-3628e2c51c71",
            "1477ed57-ca3a-4245-b264-7bf7cd931e15"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38151,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f7e88e07-b873-4532-a923-8195eed0c781",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4232,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34197/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34197/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34197/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34197/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34197/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "52d1994f-7313-420f-9017-bab39d6d9996",
              "parentUUID": "f7e88e07-b873-4532-a923-8195eed0c781",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4206,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34197/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34197/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34197/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34197/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34197/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ebd37ae3-f4f0-48d3-8780-cb9534d86c5f",
              "parentUUID": "f7e88e07-b873-4532-a923-8195eed0c781",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4206,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34197/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34197/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34197/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34197/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34197/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34197/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c60c2176-6a9c-4054-bc9b-a1d9b58b30eb",
              "parentUUID": "f7e88e07-b873-4532-a923-8195eed0c781",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "52d1994f-7313-420f-9017-bab39d6d9996",
            "ebd37ae3-f4f0-48d3-8780-cb9534d86c5f",
            "c60c2176-6a9c-4054-bc9b-a1d9b58b30eb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12644,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f67f1f66-7a22-478b-958b-96a190ea572b",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 320,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34197/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34197/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34197/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34197/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34197/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34197/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34197/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "c4ac1674-db8a-4438-8a3f-05a3fbe8684d",
              "parentUUID": "f67f1f66-7a22-478b-958b-96a190ea572b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 242,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34197/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34197/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34197/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34197/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34197/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34197/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34197/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34197/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34197/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34197/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34197/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34197/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "28199d53-2d48-4533-9ef8-72b78e506721",
              "parentUUID": "f67f1f66-7a22-478b-958b-96a190ea572b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c4ac1674-db8a-4438-8a3f-05a3fbe8684d",
            "28199d53-2d48-4533-9ef8-72b78e506721"
          ],
          "pending": [],
          "skipped": [],
          "duration": 562,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}