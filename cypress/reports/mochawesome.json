{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-08-14T02:51:41.144Z",
    "end": "2021-08-14T02:56:03.812Z",
    "duration": 262668,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ce67bb74-5701-47d9-bcb2-b37208f871aa",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6371a4f1-9ab4-4835-a560-5a90a695ad30",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 1911,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "46709075-80d0-45ae-b8b1-a0c0d5c9a437",
              "parentUUID": "6371a4f1-9ab4-4835-a560-5a90a695ad30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46709075-80d0-45ae-b8b1-a0c0d5c9a437"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1911,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "553875e8-a4b1-4d7f-8d2e-714fce124509",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 1851,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "5482b8d7-da17-45c2-83b8-66ad96e45fc4",
              "parentUUID": "553875e8-a4b1-4d7f-8d2e-714fce124509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 2069,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "3c82217b-326f-4483-95fc-e4b85682e440",
              "parentUUID": "553875e8-a4b1-4d7f-8d2e-714fce124509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 1302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "7dd14863-1147-4a09-9dda-c980235c5aec",
              "parentUUID": "553875e8-a4b1-4d7f-8d2e-714fce124509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 1166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "68f3bcb9-700f-4ee8-b642-44df4e334c19",
              "parentUUID": "553875e8-a4b1-4d7f-8d2e-714fce124509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 882,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "e042736e-77dc-4cb1-967e-76447421ba35",
              "parentUUID": "553875e8-a4b1-4d7f-8d2e-714fce124509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 780,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "a50913c6-7187-49d2-8b3b-02ecc3871252",
              "parentUUID": "553875e8-a4b1-4d7f-8d2e-714fce124509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 1412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "2c1dda8f-8cb3-4a1d-ad09-f049adc8a058",
              "parentUUID": "553875e8-a4b1-4d7f-8d2e-714fce124509",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5482b8d7-da17-45c2-83b8-66ad96e45fc4",
            "3c82217b-326f-4483-95fc-e4b85682e440",
            "7dd14863-1147-4a09-9dda-c980235c5aec",
            "68f3bcb9-700f-4ee8-b642-44df4e334c19",
            "e042736e-77dc-4cb1-967e-76447421ba35",
            "a50913c6-7187-49d2-8b3b-02ecc3871252",
            "2c1dda8f-8cb3-4a1d-ad09-f049adc8a058"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9462,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ad05a776-9a0d-4b29-990b-244549d88d6a",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 1174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "28933d9b-4aa2-4ec0-b0ae-4db45088c2d2",
              "parentUUID": "ad05a776-9a0d-4b29-990b-244549d88d6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 2418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "ed3df53b-8988-4842-aefa-c348c0a40ade",
              "parentUUID": "ad05a776-9a0d-4b29-990b-244549d88d6a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28933d9b-4aa2-4ec0-b0ae-4db45088c2d2",
            "ed3df53b-8988-4842-aefa-c348c0a40ade"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3592,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "506b866a-1694-4f27-8349-c63dc87206a2",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 1656,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "275c96be-3ce0-482a-9725-d1ff2387349b",
              "parentUUID": "506b866a-1694-4f27-8349-c63dc87206a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 2769,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "4f0768ed-4f28-4132-8a5b-d56d15039af0",
              "parentUUID": "506b866a-1694-4f27-8349-c63dc87206a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 1340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "1b08629f-2900-45b4-9243-a5039cf9b0c7",
              "parentUUID": "506b866a-1694-4f27-8349-c63dc87206a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 2113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "4eb04f70-7a8b-473f-a2b0-63e1d953b4b1",
              "parentUUID": "506b866a-1694-4f27-8349-c63dc87206a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "275c96be-3ce0-482a-9725-d1ff2387349b",
            "4f0768ed-4f28-4132-8a5b-d56d15039af0",
            "1b08629f-2900-45b4-9243-a5039cf9b0c7",
            "4eb04f70-7a8b-473f-a2b0-63e1d953b4b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7878,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "080d579a-1021-45b1-b2ce-7de7bd83e814",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 16905,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "bf6a55e5-d9af-4a2c-884f-9038a2b9b23a",
              "parentUUID": "080d579a-1021-45b1-b2ce-7de7bd83e814",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1712,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "986b92b2-143c-41d7-b75b-a0b258432f12",
              "parentUUID": "080d579a-1021-45b1-b2ce-7de7bd83e814",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf6a55e5-d9af-4a2c-884f-9038a2b9b23a",
            "986b92b2-143c-41d7-b75b-a0b258432f12"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18617,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0de34082-8f1e-423e-86f7-3799fc85aad8",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 978,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d97dcf52-7d39-4677-bb7a-1641c5cd5dd0",
              "parentUUID": "0de34082-8f1e-423e-86f7-3799fc85aad8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "ce1aeb41-e408-4451-b61f-2001173890bc",
              "parentUUID": "0de34082-8f1e-423e-86f7-3799fc85aad8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d97dcf52-7d39-4677-bb7a-1641c5cd5dd0",
            "ce1aeb41-e408-4451-b61f-2001173890bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5bad5337-3d83-4ac9-9fb0-b22f87647727",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 1960,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "047decb5-e8bb-4efa-9c94-1c6ea5fe29f6",
              "parentUUID": "5bad5337-3d83-4ac9-9fb0-b22f87647727",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 105819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "407027bc-477e-4a99-8f17-c48113f683dc",
              "parentUUID": "5bad5337-3d83-4ac9-9fb0-b22f87647727",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "047decb5-e8bb-4efa-9c94-1c6ea5fe29f6",
            "407027bc-477e-4a99-8f17-c48113f683dc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 107779,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "11e29ba4-91bd-43db-a26f-1a97a54a788a",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 3631,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "0844ce5c-d7b4-4f1c-8dc6-728b5a4cfde4",
              "parentUUID": "11e29ba4-91bd-43db-a26f-1a97a54a788a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 12580,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "a30c88b9-2ddb-47dc-aeeb-0cc66d8b3fc3",
              "parentUUID": "11e29ba4-91bd-43db-a26f-1a97a54a788a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 4226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "63881408-cb06-4be8-83ba-80fd952b0fa7",
              "parentUUID": "11e29ba4-91bd-43db-a26f-1a97a54a788a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0844ce5c-d7b4-4f1c-8dc6-728b5a4cfde4",
            "a30c88b9-2ddb-47dc-aeeb-0cc66d8b3fc3",
            "63881408-cb06-4be8-83ba-80fd952b0fa7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8a4ee1de-9ae0-4d58-8696-c311ae6b1798",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 920,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "a08e4909-bc46-44a7-a065-03f2a9f02b72",
              "parentUUID": "8a4ee1de-9ae0-4d58-8696-c311ae6b1798",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 458,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "46f74f08-25f5-4d86-af5c-d7b041772d0f",
              "parentUUID": "8a4ee1de-9ae0-4d58-8696-c311ae6b1798",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 1060,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "28612a1f-4c7b-4896-b0d3-37c45bf96cce",
              "parentUUID": "8a4ee1de-9ae0-4d58-8696-c311ae6b1798",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 4719,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "a909117f-7762-48f9-bcfe-7540a5b3524b",
              "parentUUID": "8a4ee1de-9ae0-4d58-8696-c311ae6b1798",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a08e4909-bc46-44a7-a065-03f2a9f02b72",
            "46f74f08-25f5-4d86-af5c-d7b041772d0f",
            "28612a1f-4c7b-4896-b0d3-37c45bf96cce",
            "a909117f-7762-48f9-bcfe-7540a5b3524b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7157,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e0c2d242-b6cf-457a-ab8e-c38016ccece9",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5797,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41195/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41195/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41195/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41195/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41195/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41195/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41195/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41195/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41195/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b77e3e7a-2183-4f40-abab-bd348192c5ba",
              "parentUUID": "e0c2d242-b6cf-457a-ab8e-c38016ccece9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5172,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41195/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41195/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41195/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41195/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41195/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41195/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41195/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41195/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41195/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fd4505b6-33b3-465d-8845-6b9a8d7f7327",
              "parentUUID": "e0c2d242-b6cf-457a-ab8e-c38016ccece9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 5434,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41195/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41195/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41195/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41195/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41195/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41195/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41195/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41195/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41195/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a8803021-692c-4943-8c4f-a350836ba5cd",
              "parentUUID": "e0c2d242-b6cf-457a-ab8e-c38016ccece9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 5490,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41195/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41195/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41195/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41195/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41195/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41195/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41195/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41195/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41195/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1852a38c-1702-447e-b3b0-1193c68957cd",
              "parentUUID": "e0c2d242-b6cf-457a-ab8e-c38016ccece9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5262,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41195/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41195/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41195/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41195/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41195/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41195/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41195/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41195/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41195/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dd1fe8d5-bc79-493b-9834-8698554cc522",
              "parentUUID": "e0c2d242-b6cf-457a-ab8e-c38016ccece9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 5672,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41195/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41195/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41195/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41195/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41195/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41195/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41195/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41195/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41195/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e6834ad5-9c3a-417b-9fa4-ec1e6a2efe89",
              "parentUUID": "e0c2d242-b6cf-457a-ab8e-c38016ccece9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 5682,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41195/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41195/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41195/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41195/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41195/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41195/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41195/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41195/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41195/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a304fb69-67df-4415-9eb9-3c3c5222d5e4",
              "parentUUID": "e0c2d242-b6cf-457a-ab8e-c38016ccece9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 5684,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41195/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41195/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41195/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41195/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41195/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41195/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41195/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41195/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41195/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1e95becc-899c-4b0a-b746-ebdbca18e083",
              "parentUUID": "e0c2d242-b6cf-457a-ab8e-c38016ccece9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5426,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41195/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41195/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41195/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41195/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41195/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41195/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41195/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41195/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41195/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ece3fe61-c295-4cb7-b902-d784df22bbde",
              "parentUUID": "e0c2d242-b6cf-457a-ab8e-c38016ccece9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b77e3e7a-2183-4f40-abab-bd348192c5ba",
            "fd4505b6-33b3-465d-8845-6b9a8d7f7327",
            "a8803021-692c-4943-8c4f-a350836ba5cd",
            "1852a38c-1702-447e-b3b0-1193c68957cd",
            "dd1fe8d5-bc79-493b-9834-8698554cc522",
            "e6834ad5-9c3a-417b-9fa4-ec1e6a2efe89",
            "a304fb69-67df-4415-9eb9-3c3c5222d5e4",
            "1e95becc-899c-4b0a-b746-ebdbca18e083",
            "ece3fe61-c295-4cb7-b902-d784df22bbde"
          ],
          "pending": [],
          "skipped": [],
          "duration": 49619,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "007c1eea-962c-49b5-adeb-1cc5a2da1af2",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5899,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41195/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41195/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41195/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41195/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41195/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41195/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41195/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41195/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41195/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "eac10f07-5ba4-4719-87e7-f96ddb1eb0d8",
              "parentUUID": "007c1eea-962c-49b5-adeb-1cc5a2da1af2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 5835,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41195/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41195/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41195/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41195/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41195/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41195/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41195/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41195/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41195/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7f14d7c4-174c-4605-85f6-415ced1a3254",
              "parentUUID": "007c1eea-962c-49b5-adeb-1cc5a2da1af2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5585,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41195/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41195/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41195/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41195/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41195/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41195/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41195/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41195/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41195/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41195/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41195/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "10e5f7f7-d2ab-4a06-801d-b99408a16fb5",
              "parentUUID": "007c1eea-962c-49b5-adeb-1cc5a2da1af2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "eac10f07-5ba4-4719-87e7-f96ddb1eb0d8",
            "7f14d7c4-174c-4605-85f6-415ced1a3254",
            "10e5f7f7-d2ab-4a06-801d-b99408a16fb5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 17319,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0b306653-6b6c-4e61-888a-c580413b9e01",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 7397,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "aaae5ec9-cb48-431f-a206-2ac19ab9b207",
              "parentUUID": "0b306653-6b6c-4e61-888a-c580413b9e01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 2449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "ae8dc5b1-4e0e-45dc-addc-6aab060178e9",
              "parentUUID": "0b306653-6b6c-4e61-888a-c580413b9e01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aaae5ec9-cb48-431f-a206-2ac19ab9b207",
            "ae8dc5b1-4e0e-45dc-addc-6aab060178e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9846,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}