{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 33,
    "pending": 0,
    "failures": 8,
    "start": "2021-08-15T01:49:05.006Z",
    "end": "2021-08-15T01:50:25.735Z",
    "duration": 80729,
    "testsRegistered": 41,
    "passPercent": 80.48780487804879,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7d086869-e413-4c9e-a0d7-620b81ad0269",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c42583c-e4d4-4d08-b844-035c71eebd77",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "92bb56cb-7fbb-475c-9447-4d6f58ad241d",
              "parentUUID": "9c42583c-e4d4-4d08-b844-035c71eebd77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92bb56cb-7fbb-475c-9447-4d6f58ad241d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 550,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "feb96a76-d483-437c-8cd5-a089a7c03bb7",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "9fe0e650-384e-42b2-a792-102c9dd0070e",
              "parentUUID": "feb96a76-d483-437c-8cd5-a089a7c03bb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "2794be5c-a5b2-4395-a979-6b951194835c",
              "parentUUID": "feb96a76-d483-437c-8cd5-a089a7c03bb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "708cad0f-015c-4012-81e4-6a85feb71706",
              "parentUUID": "feb96a76-d483-437c-8cd5-a089a7c03bb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "7e434a8c-60b2-4b84-81b9-056fb5d1cb2e",
              "parentUUID": "feb96a76-d483-437c-8cd5-a089a7c03bb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 4252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div#color2.color>' to be horizontally aligned with <div id=\"color1\" class=\"color selected\"></div>",
                "estack": "CypressError: Timed out retrying: expected '<div#color2.color>' to be horizontally aligned with <div id=\"color1\" class=\"color selected\"></div>\n    at cypressErr (http://localhost:44295/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44295/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44295/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44295/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44295/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44295/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44295/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44295/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44295/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44295/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44295/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "79c539b5-699d-4aa4-83ea-faa92bbc99a1",
              "parentUUID": "feb96a76-d483-437c-8cd5-a089a7c03bb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "8c911832-b202-4674-be54-973deba3184a",
              "parentUUID": "feb96a76-d483-437c-8cd5-a089a7c03bb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "799892ff-fb1a-4c3f-a9b9-ad74cbcaf18b",
              "parentUUID": "feb96a76-d483-437c-8cd5-a089a7c03bb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9fe0e650-384e-42b2-a792-102c9dd0070e",
            "2794be5c-a5b2-4395-a979-6b951194835c",
            "708cad0f-015c-4012-81e4-6a85feb71706",
            "7e434a8c-60b2-4b84-81b9-056fb5d1cb2e",
            "8c911832-b202-4674-be54-973deba3184a",
            "799892ff-fb1a-4c3f-a9b9-ad74cbcaf18b"
          ],
          "failures": [
            "79c539b5-699d-4aa4-83ea-faa92bbc99a1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5356,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4ead2002-25aa-48b7-aca3-cd6c65f47bbd",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "8eb92cdf-3c45-41f3-af49-b7f09c4ab36e",
              "parentUUID": "4ead2002-25aa-48b7-aca3-cd6c65f47bbd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "a1d509b4-ca98-4647-9136-2a2624ac2692",
              "parentUUID": "4ead2002-25aa-48b7-aca3-cd6c65f47bbd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8eb92cdf-3c45-41f3-af49-b7f09c4ab36e",
            "a1d509b4-ca98-4647-9136-2a2624ac2692"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 343,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "147f1138-f7aa-4b03-addb-c3767de98d09",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "4caf8654-96df-47e6-a380-6593c16716d7",
              "parentUUID": "147f1138-f7aa-4b03-addb-c3767de98d09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "a2082428-0958-4563-9bb0-8b6e26697ac5",
              "parentUUID": "147f1138-f7aa-4b03-addb-c3767de98d09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c5a6ebed-0806-41f1-bd19-8c83cb3524cb",
              "parentUUID": "147f1138-f7aa-4b03-addb-c3767de98d09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "7f14600b-f863-4bcc-998f-13e4322f9a6a",
              "parentUUID": "147f1138-f7aa-4b03-addb-c3767de98d09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4caf8654-96df-47e6-a380-6593c16716d7",
            "a2082428-0958-4563-9bb0-8b6e26697ac5",
            "c5a6ebed-0806-41f1-bd19-8c83cb3524cb",
            "7f14600b-f863-4bcc-998f-13e4322f9a6a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 639,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0074c003-89b6-4e5f-b3e8-99b1e2bb46e2",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "d24e99e8-0c0b-40d7-aa01-5b6398a8f6cd",
              "parentUUID": "0074c003-89b6-4e5f-b3e8-99b1e2bb46e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "c7ef9644-0f37-4ad1-9cfb-1fb6bd1c68b1",
              "parentUUID": "0074c003-89b6-4e5f-b3e8-99b1e2bb46e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d24e99e8-0c0b-40d7-aa01-5b6398a8f6cd",
            "c7ef9644-0f37-4ad1-9cfb-1fb6bd1c68b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 729,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8406bb81-ce0e-497b-9841-6086f283b164",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "7dc8f859-7a78-4191-af85-f56ffab456e8",
              "parentUUID": "8406bb81-ce0e-497b-9841-6086f283b164",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "cd9051b8-d49f-415d-a80f-3b76e7ef7099",
              "parentUUID": "8406bb81-ce0e-497b-9841-6086f283b164",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7dc8f859-7a78-4191-af85-f56ffab456e8",
            "cd9051b8-d49f-415d-a80f-3b76e7ef7099"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 256,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9ab5fed1-1a46-4df6-971a-1c9416ca1445",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 526,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "becc424a-551c-4926-92e3-29f889d3c66a",
              "parentUUID": "9ab5fed1-1a46-4df6-971a-1c9416ca1445",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9013,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "d835d53c-2206-4ede-9bc0-2cc433652699",
              "parentUUID": "9ab5fed1-1a46-4df6-971a-1c9416ca1445",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "becc424a-551c-4926-92e3-29f889d3c66a",
            "d835d53c-2206-4ede-9bc0-2cc433652699"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9539,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "948a20c2-3073-44b0-9b55-3602df2c506b",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "e1eea02d-e20a-4126-9b83-f72245b4d774",
              "parentUUID": "948a20c2-3073-44b0-9b55-3602df2c506b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "5c7d6aa9-019e-4d07-a2d8-29821cf9775c",
              "parentUUID": "948a20c2-3073-44b0-9b55-3602df2c506b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2395,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "b1bfdd74-a438-4c76-b432-7df09df5c48a",
              "parentUUID": "948a20c2-3073-44b0-9b55-3602df2c506b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1eea02d-e20a-4126-9b83-f72245b4d774",
            "5c7d6aa9-019e-4d07-a2d8-29821cf9775c",
            "b1bfdd74-a438-4c76-b432-7df09df5c48a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13597,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3c2fe418-2122-4e98-820f-c07643d19e69",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "363dcf78-0330-4797-bb6c-d163338540c6",
              "parentUUID": "3c2fe418-2122-4e98-820f-c07643d19e69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "b5b1573d-7239-4f15-a43e-eaaf2ba0aefa",
              "parentUUID": "3c2fe418-2122-4e98-820f-c07643d19e69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "163b1e16-f85e-498c-8608-f16e92297b9d",
              "parentUUID": "3c2fe418-2122-4e98-820f-c07643d19e69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2489,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "609bdf99-ad5c-464c-89c8-e5d08880ed9e",
              "parentUUID": "3c2fe418-2122-4e98-820f-c07643d19e69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "363dcf78-0330-4797-bb6c-d163338540c6",
            "b5b1573d-7239-4f15-a43e-eaaf2ba0aefa",
            "163b1e16-f85e-498c-8608-f16e92297b9d",
            "609bdf99-ad5c-464c-89c8-e5d08880ed9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8a47a0b8-3b6d-4d83-9f5f-d2b23e5157bf",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "b038aedd-641f-4c17-8d06-171155382127",
              "parentUUID": "8a47a0b8-3b6d-4d83-9f5f-d2b23e5157bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "4cf1db36-7b7a-40f1-a918-be4879cd0d56",
              "parentUUID": "8a47a0b8-3b6d-4d83-9f5f-d2b23e5157bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {},
              "uuid": "7a518f09-49ea-46e0-97c1-ff4918c9a97b",
              "parentUUID": "8a47a0b8-3b6d-4d83-9f5f-d2b23e5157bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "6e6dd0ed-94f8-4bc4-9fae-9a4386a6ea98",
              "parentUUID": "8a47a0b8-3b6d-4d83-9f5f-d2b23e5157bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "7f3e2c9f-f465-4f25-84f9-44ce84acda14",
              "parentUUID": "8a47a0b8-3b6d-4d83-9f5f-d2b23e5157bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "53a7ffc9-63b1-4815-9e23-dcaedec11bf2",
              "parentUUID": "8a47a0b8-3b6d-4d83-9f5f-d2b23e5157bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {},
              "uuid": "740d8169-835e-4357-9783-1425eb12efa1",
              "parentUUID": "8a47a0b8-3b6d-4d83-9f5f-d2b23e5157bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 5287,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '125', expected '100'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '125', expected '100'.\n    at cypressErr (http://localhost:44295/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44295/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44295/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44295/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44295/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44295/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44295/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44295/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44295/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44295/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44295/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a0b72967-ae0b-4acc-9bd6-c3a580616234",
              "parentUUID": "8a47a0b8-3b6d-4d83-9f5f-d2b23e5157bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4857,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '61', expected '36'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '61', expected '36'.\n    at cypressErr (http://localhost:44295/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44295/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44295/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44295/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44295/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44295/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44295/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44295/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44295/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44295/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44295/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4a498d39-f74d-493f-912d-61a068e4f185",
              "parentUUID": "8a47a0b8-3b6d-4d83-9f5f-d2b23e5157bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b038aedd-641f-4c17-8d06-171155382127",
            "4cf1db36-7b7a-40f1-a918-be4879cd0d56",
            "7a518f09-49ea-46e0-97c1-ff4918c9a97b",
            "6e6dd0ed-94f8-4bc4-9fae-9a4386a6ea98",
            "7f3e2c9f-f465-4f25-84f9-44ce84acda14",
            "53a7ffc9-63b1-4815-9e23-dcaedec11bf2",
            "740d8169-835e-4357-9783-1425eb12efa1"
          ],
          "failures": [
            "a0b72967-ae0b-4acc-9bd6-c3a580616234",
            "4a498d39-f74d-493f-912d-61a068e4f185"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11039,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4bc53e6c-5cce-4e65-96ad-b60484799eba",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 14002,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '2525', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '2525', expected '2500'.\n    at cypressErr (http://localhost:44295/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44295/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44295/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44295/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44295/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44295/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44295/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44295/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44295/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44295/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44295/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "01336724-37d3-498e-ab36-125a14548bd2",
              "parentUUID": "4bc53e6c-5cce-4e65-96ad-b60484799eba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4916,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '41', expected '25'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '41', expected '25'.\n    at cypressErr (http://localhost:44295/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44295/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44295/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44295/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44295/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44295/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44295/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44295/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44295/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44295/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44295/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b0f49879-756a-4542-9c40-e6bbe2e958f5",
              "parentUUID": "4bc53e6c-5cce-4e65-96ad-b60484799eba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 14726,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '2626', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '2626', expected '2500'.\n    at cypressErr (http://localhost:44295/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44295/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44295/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44295/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44295/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44295/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44295/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44295/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44295/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44295/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44295/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b2df627a-f190-4375-a044-839c5befb111",
              "parentUUID": "4bc53e6c-5cce-4e65-96ad-b60484799eba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "01336724-37d3-498e-ab36-125a14548bd2",
            "b0f49879-756a-4542-9c40-e6bbe2e958f5",
            "b2df627a-f190-4375-a044-839c5befb111"
          ],
          "pending": [],
          "skipped": [],
          "duration": 33644,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aab55c5d-57d0-4796-bb66-80815ed3cfef",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 493,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44295/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44295/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44295/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44295/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44295/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44295/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44295/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44295/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44295/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44295/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44295/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44295/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d16322ad-3241-4232-9663-43677d5a992a",
              "parentUUID": "aab55c5d-57d0-4796-bb66-80815ed3cfef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 450,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44295/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44295/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44295/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44295/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44295/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44295/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44295/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44295/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44295/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44295/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44295/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44295/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44295/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "9f5c160f-7c79-42e4-b8cc-a2b4eebf6f2b",
              "parentUUID": "aab55c5d-57d0-4796-bb66-80815ed3cfef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d16322ad-3241-4232-9663-43677d5a992a",
            "9f5c160f-7c79-42e4-b8cc-a2b4eebf6f2b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 943,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}