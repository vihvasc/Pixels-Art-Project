{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-15T14:08:57.980Z",
    "end": "2021-08-15T14:11:37.063Z",
    "duration": 159083,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b7480899-f090-4d7f-b38d-889ca6db6dad",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ae0ec064-cc27-4bb8-b904-980035620a94",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 2291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "e9db888f-78fb-4f7d-a6fa-38dcf6cb5763",
              "parentUUID": "ae0ec064-cc27-4bb8-b904-980035620a94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9db888f-78fb-4f7d-a6fa-38dcf6cb5763"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2291,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c1828643-3328-48a6-995f-21fc491ff0d4",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 1160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "2733df84-51ae-4fda-aa7d-378c81141913",
              "parentUUID": "c1828643-3328-48a6-995f-21fc491ff0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 1141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "f50f441b-fc06-4568-b42d-210470e5392c",
              "parentUUID": "c1828643-3328-48a6-995f-21fc491ff0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 1101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "dd33a341-d18a-4cef-9cfa-c1c7819fb28c",
              "parentUUID": "c1828643-3328-48a6-995f-21fc491ff0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 846,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "af93f35f-ed74-40a5-ab91-c44835e2e764",
              "parentUUID": "c1828643-3328-48a6-995f-21fc491ff0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 806,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "19f288cb-b584-42a4-a8bf-bba92252ee02",
              "parentUUID": "c1828643-3328-48a6-995f-21fc491ff0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 897,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "f8d78964-8ecb-459a-9472-6d1d9971780a",
              "parentUUID": "c1828643-3328-48a6-995f-21fc491ff0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 584,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "4f3c623d-36ff-4e32-b7aa-05bf78c5f296",
              "parentUUID": "c1828643-3328-48a6-995f-21fc491ff0d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2733df84-51ae-4fda-aa7d-378c81141913",
            "f50f441b-fc06-4568-b42d-210470e5392c",
            "dd33a341-d18a-4cef-9cfa-c1c7819fb28c",
            "af93f35f-ed74-40a5-ab91-c44835e2e764",
            "19f288cb-b584-42a4-a8bf-bba92252ee02",
            "f8d78964-8ecb-459a-9472-6d1d9971780a",
            "4f3c623d-36ff-4e32-b7aa-05bf78c5f296"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6535,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5b5628d4-9ee3-4b11-b2d3-ae3bfeb12ba9",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 1035,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9230273e-58e7-4fab-8ee0-947de70a1cf3",
              "parentUUID": "5b5628d4-9ee3-4b11-b2d3-ae3bfeb12ba9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 1387,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "54687b9a-dfa7-4788-896f-a9021a461b8e",
              "parentUUID": "5b5628d4-9ee3-4b11-b2d3-ae3bfeb12ba9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9230273e-58e7-4fab-8ee0-947de70a1cf3",
            "54687b9a-dfa7-4788-896f-a9021a461b8e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8357404-c7a7-4b03-81d2-39db86cfb970",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 816,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "33ae4123-3d60-4359-b6a4-7a1f9991a2c6",
              "parentUUID": "e8357404-c7a7-4b03-81d2-39db86cfb970",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 1377,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "060ba4ba-b59e-4f6c-a09a-6996b4c6845e",
              "parentUUID": "e8357404-c7a7-4b03-81d2-39db86cfb970",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 1359,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c9129291-9d89-42b3-b0ea-db868fad5c30",
              "parentUUID": "e8357404-c7a7-4b03-81d2-39db86cfb970",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 632,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "1eb76f7f-024d-4725-b5be-ca1cdca72c52",
              "parentUUID": "e8357404-c7a7-4b03-81d2-39db86cfb970",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33ae4123-3d60-4359-b6a4-7a1f9991a2c6",
            "060ba4ba-b59e-4f6c-a09a-6996b4c6845e",
            "c9129291-9d89-42b3-b0ea-db868fad5c30",
            "1eb76f7f-024d-4725-b5be-ca1cdca72c52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "49a0ee8d-3120-4446-a69d-1e17e798572d",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 2001,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "8d13f721-2674-4827-8aac-9a055df02cb1",
              "parentUUID": "49a0ee8d-3120-4446-a69d-1e17e798572d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1422,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "1f04fb19-6967-4851-9f0b-a07da07614d0",
              "parentUUID": "49a0ee8d-3120-4446-a69d-1e17e798572d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8d13f721-2674-4827-8aac-9a055df02cb1",
            "1f04fb19-6967-4851-9f0b-a07da07614d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3423,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a05b2e2f-6269-41c3-af35-fc1863c9e9b6",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 991,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9f9fd48b-8ab1-4b9b-8641-69cf2f2a851f",
              "parentUUID": "a05b2e2f-6269-41c3-af35-fc1863c9e9b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 702,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "1ffb08e5-fc81-4380-9b7f-39980f5a504f",
              "parentUUID": "a05b2e2f-6269-41c3-af35-fc1863c9e9b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f9fd48b-8ab1-4b9b-8641-69cf2f2a851f",
            "1ffb08e5-fc81-4380-9b7f-39980f5a504f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1693,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7cbc1707-0533-4656-8b6d-825358a39f0c",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 1561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "44939be9-1381-4b0c-927c-71eddf2650e4",
              "parentUUID": "7cbc1707-0533-4656-8b6d-825358a39f0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 13882,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "25b48e99-ba89-4fbd-a376-d5eeb72467da",
              "parentUUID": "7cbc1707-0533-4656-8b6d-825358a39f0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44939be9-1381-4b0c-927c-71eddf2650e4",
            "25b48e99-ba89-4fbd-a376-d5eeb72467da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15443,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ca7ac398-3e4b-4fe5-8d59-817e1864c2dc",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 4249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "31dda9ef-c9af-46b6-9aae-85662cb9eda5",
              "parentUUID": "ca7ac398-3e4b-4fe5-8d59-817e1864c2dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 13633,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "90716d72-69f9-4f15-b989-823b25180ec7",
              "parentUUID": "ca7ac398-3e4b-4fe5-8d59-817e1864c2dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 6307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "573a1bc5-a6fe-4c62-8a07-489a9cc5c867",
              "parentUUID": "ca7ac398-3e4b-4fe5-8d59-817e1864c2dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31dda9ef-c9af-46b6-9aae-85662cb9eda5",
            "90716d72-69f9-4f15-b989-823b25180ec7",
            "573a1bc5-a6fe-4c62-8a07-489a9cc5c867"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24189,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8007ecca-bd4f-4fc8-9205-034c92d37f11",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 1229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "2cf2b565-d0c9-4732-bed4-af5145beba20",
              "parentUUID": "8007ecca-bd4f-4fc8-9205-034c92d37f11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 744,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "a26ea0d6-e673-4894-ae1d-806bc51b5c07",
              "parentUUID": "8007ecca-bd4f-4fc8-9205-034c92d37f11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 686,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "7111baa5-fc18-4fe3-a655-df48f0b8a835",
              "parentUUID": "8007ecca-bd4f-4fc8-9205-034c92d37f11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 4658,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "c5ad94e9-65d1-49c1-8ab7-edc0e74a7599",
              "parentUUID": "8007ecca-bd4f-4fc8-9205-034c92d37f11",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2cf2b565-d0c9-4732-bed4-af5145beba20",
            "a26ea0d6-e673-4894-ae1d-806bc51b5c07",
            "7111baa5-fc18-4fe3-a655-df48f0b8a835",
            "c5ad94e9-65d1-49c1-8ab7-edc0e74a7599"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7317,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "de27d090-9fb3-4de6-9cc3-f386869ecdbf",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5693,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42761/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42761/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42761/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42761/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42761/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a63ee393-0ef4-4d80-959d-b9cb14028396",
              "parentUUID": "de27d090-9fb3-4de6-9cc3-f386869ecdbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 6670,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42761/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42761/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42761/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42761/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42761/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e00cd188-8434-4bce-a612-965f4184deb3",
              "parentUUID": "de27d090-9fb3-4de6-9cc3-f386869ecdbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 6677,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42761/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42761/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42761/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42761/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42761/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b3315505-1a9b-4edc-b5e8-30a11a6218fb",
              "parentUUID": "de27d090-9fb3-4de6-9cc3-f386869ecdbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 6384,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42761/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42761/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42761/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42761/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42761/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "637eff23-ca2c-490b-8a1a-29e1693beff0",
              "parentUUID": "de27d090-9fb3-4de6-9cc3-f386869ecdbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 6103,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42761/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42761/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42761/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42761/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42761/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0773f9d5-57de-4539-96a7-3740cf51fbc0",
              "parentUUID": "de27d090-9fb3-4de6-9cc3-f386869ecdbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 6092,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42761/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42761/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42761/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42761/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42761/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1e154191-7aaa-4e81-accf-4e8ed335a103",
              "parentUUID": "de27d090-9fb3-4de6-9cc3-f386869ecdbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 7228,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42761/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42761/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42761/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42761/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42761/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "74802208-e59a-4894-80ba-6085cce2c5c8",
              "parentUUID": "de27d090-9fb3-4de6-9cc3-f386869ecdbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 7031,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42761/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42761/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42761/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42761/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42761/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8c2c3232-4dbf-48f8-96aa-617ef1bcef8b",
              "parentUUID": "de27d090-9fb3-4de6-9cc3-f386869ecdbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 6594,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42761/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42761/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42761/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42761/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42761/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a2c2bf17-9333-4b3c-83ef-833ef85f6281",
              "parentUUID": "de27d090-9fb3-4de6-9cc3-f386869ecdbf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a63ee393-0ef4-4d80-959d-b9cb14028396",
            "e00cd188-8434-4bce-a612-965f4184deb3",
            "b3315505-1a9b-4edc-b5e8-30a11a6218fb",
            "637eff23-ca2c-490b-8a1a-29e1693beff0",
            "0773f9d5-57de-4539-96a7-3740cf51fbc0",
            "1e154191-7aaa-4e81-accf-4e8ed335a103",
            "74802208-e59a-4894-80ba-6085cce2c5c8",
            "8c2c3232-4dbf-48f8-96aa-617ef1bcef8b",
            "a2c2bf17-9333-4b3c-83ef-833ef85f6281"
          ],
          "pending": [],
          "skipped": [],
          "duration": 58472,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a4660de-e3f9-4b32-b2ff-1c13d7197e9e",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5810,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42761/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42761/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42761/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42761/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42761/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7c71b735-2a4c-422e-a8d9-7d646582edbb",
              "parentUUID": "5a4660de-e3f9-4b32-b2ff-1c13d7197e9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 6477,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42761/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42761/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42761/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42761/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42761/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "92c56123-a70d-4b4f-b4ed-9952a6ab3836",
              "parentUUID": "5a4660de-e3f9-4b32-b2ff-1c13d7197e9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 7056,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42761/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42761/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42761/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42761/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42761/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42761/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cf6f0e8e-66df-4280-933f-9cc9b42f7b87",
              "parentUUID": "5a4660de-e3f9-4b32-b2ff-1c13d7197e9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7c71b735-2a4c-422e-a8d9-7d646582edbb",
            "92c56123-a70d-4b4f-b4ed-9952a6ab3836",
            "cf6f0e8e-66df-4280-933f-9cc9b42f7b87"
          ],
          "pending": [],
          "skipped": [],
          "duration": 19343,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1e029e25-497b-4c63-8c38-cea335de4797",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 3522,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:42761/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:42761/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:42761/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:42761/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:42761/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:42761/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:42761/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d3d272b5-4b16-440e-8a6b-d128404d4cc3",
              "parentUUID": "1e029e25-497b-4c63-8c38-cea335de4797",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 3299,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:42761/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:42761/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:42761/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:42761/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:42761/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:42761/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:42761/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42761/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42761/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:42761/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42761/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42761/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "db0f1c16-8036-4dec-8ced-9cb4e65c0189",
              "parentUUID": "1e029e25-497b-4c63-8c38-cea335de4797",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d3d272b5-4b16-440e-8a6b-d128404d4cc3",
            "db0f1c16-8036-4dec-8ced-9cb4e65c0189"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6821,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}